{"version":3,"file":"static/js/4364.423eac6f.chunk.js","mappings":"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","sources":["auth/components/form-head.jsx","auth/components/sign-up-terms.jsx","auth/utils/error-message.js","auth/view/jwt/jwt-sign-in-view.jsx","auth/view/jwt/jwt-sign-up-view.jsx","pages/auth/jwt/sign-up.jsx","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestErrors.ts","../node_modules/@hookform/resolvers/zod/src/zod.ts"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\n// ----------------------------------------------------------------------\n\nexport function FormHead({ sx, icon, title, description, ...other }) {\n  return (\n    <>\n      {icon && (\n        <Box component=\"span\" sx={{ mb: 3, mx: 'auto', display: 'inline-flex' }}>\n          {icon}\n        </Box>\n      )}\n\n      <Box\n        sx={[\n          () => ({\n            mb: 5,\n            gap: 1.5,\n            display: 'flex',\n            textAlign: 'center',\n            whiteSpace: 'pre-line',\n            flexDirection: 'column',\n          }),\n          ...(Array.isArray(sx) ? sx : [sx]),\n        ]}\n        {...other}\n      >\n        <Typography variant=\"h5\">{title}</Typography>\n\n        {description && (\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {description}\n          </Typography>\n        )}\n      </Box>\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n\n// ----------------------------------------------------------------------\n\nexport function SignUpTerms({ sx, ...other }) {\n  return (\n    <Box\n      component=\"span\"\n      sx={[\n        () => ({\n          mt: 3,\n          display: 'block',\n          textAlign: 'center',\n          typography: 'caption',\n          color: 'text.secondary',\n        }),\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n      {...other}\n    >\n      {'By signing up, I agree to '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Terms of service\n      </Link>\n      {' and '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Privacy policy\n      </Link>\n      .\n    </Box>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function getErrorMessage(error) {\n  if (error instanceof Error) {\n    return error.message || error.name || 'An error occurred';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (typeof error === 'object' && error !== null) {\n    const errorMessage = error.message;\n    if (typeof errorMessage === 'string') {\n      return errorMessage;\n    }\n  }\n\n  return `Unknown error: ${error}`;\n}\n","import { z as zod } from 'zod';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useBoolean } from 'minimal-shared/hooks';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\nimport { RouterLink } from 'src/routes/components';\n\nimport { Iconify } from 'src/components/iconify';\nimport { Form, Field } from 'src/components/hook-form';\n\nimport { useAuthContext } from '../../hooks';\nimport { getErrorMessage } from '../../utils';\nimport { FormHead } from '../../components/form-head';\nimport { signInWithPassword } from '../../context/jwt';\n\n// ----------------------------------------------------------------------\n\nexport const SignInSchema = zod.object({\n  email: zod\n    .string()\n    .min(1, { message: 'Email is required!' })\n    .email({ message: 'Email must be a valid email address!' }),\n  password: zod\n    .string()\n    .min(1, { message: 'Password is required!' })\n    .min(6, { message: 'Password must be at least 6 characters!' }),\n});\n\n// ----------------------------------------------------------------------\n\nexport function JwtSignInView() {\n  const router = useRouter();\n\n  const showPassword = useBoolean();\n\n  const { checkUserSession } = useAuthContext();\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const defaultValues = {\n    email: 'demo@minimals.cc',\n    password: '@2Minimal',\n  };\n\n  const methods = useForm({\n    resolver: zodResolver(SignInSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await signInWithPassword({ email: data.email, password: data.password });\n      await checkUserSession?.();\n\n      router.refresh();\n    } catch (error) {\n      console.error(error);\n      const feedbackMessage = getErrorMessage(error);\n      setErrorMessage(feedbackMessage);\n    }\n  });\n\n  const renderForm = () => (\n    <Box sx={{ gap: 3, display: 'flex', flexDirection: 'column' }}>\n      <Field.Text name=\"email\" label=\"Email address\" slotProps={{ inputLabel: { shrink: true } }} />\n\n      <Box sx={{ gap: 1.5, display: 'flex', flexDirection: 'column' }}>\n        <Link\n          component={RouterLink}\n          href=\"#\"\n          variant=\"body2\"\n          color=\"inherit\"\n          sx={{ alignSelf: 'flex-end' }}\n        >\n          Forgot password?\n        </Link>\n\n        <Field.Text\n          name=\"password\"\n          label=\"Password\"\n          placeholder=\"6+ characters\"\n          type={showPassword.value ? 'text' : 'password'}\n          slotProps={{\n            inputLabel: { shrink: true },\n            input: {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={showPassword.onToggle} edge=\"end\">\n                    <Iconify\n                      icon={showPassword.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'}\n                    />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            },\n          }}\n        />\n      </Box>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        loadingIndicator=\"Sign in...\"\n      >\n        Sign in\n      </LoadingButton>\n    </Box>\n  );\n\n  return (\n    <>\n      <FormHead\n        title=\"Sign in to your account\"\n        description={\n          <>\n            {`Don’t have an account? `}\n            <Link component={RouterLink} href={paths.auth.jwt.signUp} variant=\"subtitle2\">\n              Get started\n            </Link>\n          </>\n        }\n        sx={{ textAlign: { xs: 'center', md: 'left' } }}\n      />\n\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Use <strong>{defaultValues.email}</strong>\n        {' with password '}\n        <strong>{defaultValues.password}</strong>\n      </Alert>\n\n      {!!errorMessage && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {errorMessage}\n        </Alert>\n      )}\n\n      <Form methods={methods} onSubmit={onSubmit}>\n        {renderForm()}\n      </Form>\n    </>\n  );\n}\n","import { z as zod } from 'zod';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useBoolean } from 'minimal-shared/hooks';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\nimport { RouterLink } from 'src/routes/components';\n\nimport { Iconify } from 'src/components/iconify';\nimport { Form, Field } from 'src/components/hook-form';\n\nimport { signUp } from '../../context/jwt';\nimport { useAuthContext } from '../../hooks';\nimport { getErrorMessage } from '../../utils';\nimport { FormHead } from '../../components/form-head';\nimport { SignUpTerms } from '../../components/sign-up-terms';\n\n// ----------------------------------------------------------------------\n\nexport const SignUpSchema = zod.object({\n  firstName: zod.string().min(1, { message: 'First name is required!' }),\n  lastName: zod.string().min(1, { message: 'Last name is required!' }),\n  email: zod\n    .string()\n    .min(1, { message: 'Email is required!' })\n    .email({ message: 'Email must be a valid email address!' }),\n  password: zod\n    .string()\n    .min(1, { message: 'Password is required!' })\n    .min(6, { message: 'Password must be at least 6 characters!' }),\n});\n\n// ----------------------------------------------------------------------\n\nexport function JwtSignUpView() {\n  const router = useRouter();\n\n  const showPassword = useBoolean();\n\n  const { checkUserSession } = useAuthContext();\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const defaultValues = {\n    firstName: 'Hello',\n    lastName: 'Friend',\n    email: 'hello@gmail.com',\n    password: '@2Minimal',\n  };\n\n  const methods = useForm({\n    resolver: zodResolver(SignUpSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await signUp({\n        email: data.email,\n        password: data.password,\n        firstName: data.firstName,\n        lastName: data.lastName,\n      });\n      await checkUserSession?.();\n\n      router.refresh();\n    } catch (error) {\n      console.error(error);\n      const feedbackMessage = getErrorMessage(error);\n      setErrorMessage(feedbackMessage);\n    }\n  });\n\n  const renderForm = () => (\n    <Box sx={{ gap: 3, display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{ display: 'flex', gap: { xs: 3, sm: 2 }, flexDirection: { xs: 'column', sm: 'row' } }}\n      >\n        <Field.Text\n          name=\"firstName\"\n          label=\"First name\"\n          slotProps={{ inputLabel: { shrink: true } }}\n        />\n        <Field.Text\n          name=\"lastName\"\n          label=\"Last name\"\n          slotProps={{ inputLabel: { shrink: true } }}\n        />\n      </Box>\n\n      <Field.Text name=\"email\" label=\"Email address\" slotProps={{ inputLabel: { shrink: true } }} />\n\n      <Field.Text\n        name=\"password\"\n        label=\"Password\"\n        placeholder=\"6+ characters\"\n        type={showPassword.value ? 'text' : 'password'}\n        slotProps={{\n          inputLabel: { shrink: true },\n          input: {\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={showPassword.onToggle} edge=\"end\">\n                  <Iconify icon={showPassword.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          },\n        }}\n      />\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        loadingIndicator=\"Create account...\"\n      >\n        Create account\n      </LoadingButton>\n    </Box>\n  );\n\n  return (\n    <>\n      <FormHead\n        title=\"Get started absolutely free\"\n        description={\n          <>\n            {`Already have an account? `}\n            <Link component={RouterLink} href={paths.auth.jwt.signIn} variant=\"subtitle2\">\n              Get started\n            </Link>\n          </>\n        }\n        sx={{ textAlign: { xs: 'center', md: 'left' } }}\n      />\n\n      {!!errorMessage && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {errorMessage}\n        </Alert>\n      )}\n\n      <Form methods={methods} onSubmit={onSubmit}>\n        {renderForm()}\n      </Form>\n\n      <SignUpTerms />\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CONFIG } from 'src/global-config';\n\nimport { JwtSignUpView } from 'src/auth/view/jwt';\n\n// ----------------------------------------------------------------------\n\nconst metadata = { title: `Sign up | Jwt - ${CONFIG.appName}` };\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> {metadata.title}</title>\n      </Helmet>\n\n      <JwtSignUpView />\n    </>\n  );\n}\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  Ref,\n  ResolverOptions,\n  get,\n} from 'react-hook-form';\n\nconst setCustomValidity = (\n  ref: Ref,\n  fieldPath: string,\n  errors: FieldErrors,\n) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors);\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) =>\n        setCustomValidity(ref, fieldPath, errors),\n      );\n    }\n  }\n};\n","import {\n  Field,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n  ResolverOptions,\n  get,\n  set,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestErrors = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n    const error = Object.assign(errors[path] || {}, {\n      ref: field && field.ref,\n    });\n\n    if (isNameInFieldArray(options.names || Object.keys(errors), path)) {\n      const fieldArrayErrors = Object.assign({}, get(fieldErrors, path));\n\n      set(fieldArrayErrors, 'root', error);\n      set(fieldErrors, path, fieldArrayErrors);\n    } else {\n      set(fieldErrors, path, error);\n    }\n  }\n\n  return fieldErrors;\n};\n\nconst isNameInFieldArray = (\n  names: InternalFieldName[],\n  name: InternalFieldName,\n) => names.some((n) => n.startsWith(name + '.'));\n","import { toNestErrors, validateFieldsNatively } from '@hookform/resolvers';\nimport { FieldError, FieldErrors, appendErrors } from 'react-hook-form';\nimport { ZodError, z } from 'zod';\nimport type { Resolver } from './types';\n\nconst isZodError = (error: any): error is ZodError =>\n  Array.isArray(error?.errors);\n\nconst parseErrorSchema = (\n  zodErrors: z.ZodIssue[],\n  validateAllFieldCriteria: boolean,\n) => {\n  const errors: Record<string, FieldError> = {};\n  for (; zodErrors.length; ) {\n    const error = zodErrors[0];\n    const { code, message, path } = error;\n    const _path = path.join('.');\n\n    if (!errors[_path]) {\n      if ('unionErrors' in error) {\n        const unionError = error.unionErrors[0].errors[0];\n\n        errors[_path] = {\n          message: unionError.message,\n          type: unionError.code,\n        };\n      } else {\n        errors[_path] = { message, type: code };\n      }\n    }\n\n    if ('unionErrors' in error) {\n      error.unionErrors.forEach((unionError) =>\n        unionError.errors.forEach((e) => zodErrors.push(e)),\n      );\n    }\n\n    if (validateAllFieldCriteria) {\n      const types = errors[_path].types;\n      const messages = types && types[error.code];\n\n      errors[_path] = appendErrors(\n        _path,\n        validateAllFieldCriteria,\n        errors,\n        code,\n        messages\n          ? ([] as string[]).concat(messages as string[], error.message)\n          : error.message,\n      ) as FieldError;\n    }\n\n    zodErrors.shift();\n  }\n\n  return errors;\n};\n\nexport const zodResolver: Resolver =\n  (schema, schemaOptions, resolverOptions = {}) =>\n  async (values, _, options) => {\n    try {\n      const data = await schema[\n        resolverOptions.mode === 'sync' ? 'parse' : 'parseAsync'\n      ](values, schemaOptions);\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        errors: {} as FieldErrors,\n        values: resolverOptions.raw ? values : data,\n      };\n    } catch (error: any) {\n      if (isZodError(error)) {\n        return {\n          values: {},\n          errors: toNestErrors(\n            parseErrorSchema(\n              error.errors,\n              !options.shouldUseNativeValidation &&\n                options.criteriaMode === 'all',\n            ),\n            options,\n          ),\n        };\n      }\n\n      throw error;\n    }\n  };\n"],"names":["FormHead","_ref","sx","icon","title","description","other","_jsxs","_Fragment","children","_jsx","Box","component","mb","mx","display","gap","textAlign","whiteSpace","flexDirection","Array","isArray","Typography","variant","color","SignUpTerms","mt","typography","Link","underline","getErrorMessage","error","Error","message","name","errorMessage","SignInSchema","zod","object","email","string","min","password","JwtSignInView","router","useRouter","showPassword","useBoolean","checkUserSession","useAuthContext","setErrorMessage","useState","defaultValues","methods","useForm","resolver","zodResolver","handleSubmit","formState","isSubmitting","onSubmit","async","signInWithPassword","data","refresh","console","feedbackMessage","RouterLink","href","paths","auth","jwt","signUp","xs","md","Alert","severity","Form","Field","Text","label","slotProps","inputLabel","shrink","alignSelf","placeholder","type","value","input","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","LoadingButton","fullWidth","size","loading","loadingIndicator","SignUpSchema","firstName","lastName","JwtSignUpView","signIn","sm","metadata","CONFIG","appName","Page","Helmet","s","e","o","r","t","setCustomValidity","reportValidity","fields","ref","refs","forEach","shouldUseNativeValidation","f","n","a","Object","assign","i","names","keys","some","startsWith","length","code","path","join","u","unionErrors","errors","push","c","types","concat","shift","Promise","resolve","mode","then","values","raw","criteriaMode","reject"],"sourceRoot":""}