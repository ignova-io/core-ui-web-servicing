{"version":3,"file":"static/js/6788.654857a6.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Accordion/Accordion.js","../node_modules/@mui/material/Accordion/AccordionContext.js","../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../node_modules/@mui/material/AccordionSummary/AccordionSummary.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading',\n  overridesResolver: (props, styles) => styles.heading\n})({\n  all: 'unset'\n});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;"],"names":["AccordionRoot","styled","Paper","name","slot","overridesResolver","props","styles","ownerState","accordionClasses","region","root","square","rounded","disableGutters","gutters","memoTheme","_ref","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","expanded","marginTop","marginBottom","disabled","action","disabledBackground","_ref2","variants","style","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","AccordionHeading","heading","all","React","inProps","ref","useDefaultProps","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slots","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","setExpandedState","useControlled","controlled","default","state","handleChange","event","summary","toArray","contextValue","toggle","classes","composeClasses","getAccordionUtilityClass","useUtilityClasses","externalForwardedProps","AccordionHeadingSlot","accordionProps","useSlot","elementType","TransitionSlot","transitionProps","Collapse","_jsxs","clsx","_jsx","AccordionContext","Provider","value","in","timeout","id","role","AccordionDetailsRoot","padding","spacing","getAccordionDetailsUtilityClass","generateUtilityClass","generateUtilityClasses","AccordionSummaryRoot","ButtonBase","width","minHeight","accordionSummaryClasses","focusVisible","focus","disabledOpacity","cursor","AccordionSummaryContent","textAlign","flexGrow","AccordionSummaryExpandIconWrapper","expandIconWrapper","_ref3","color","active","transform","expandIcon","focusVisibleClassName","onClick","getAccordionSummaryUtilityClass","focusRipple","disableRipple"],"sourceRoot":""}