{"version":3,"file":"static/js/6311.b33ee8f7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Avatar, { avatarClasses } from \"../Avatar/index.js\";\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from \"./avatarGroupClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: -8\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n    }, styles.root];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row-reverse',\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: 'var(--AvatarGroup-spacing, -8px)',\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }\n})));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps,\n    max = 5,\n    renderSurplus,\n    slotProps = {},\n    slots = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular',\n    ...other\n  } = props;\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = {\n    ...props,\n    max,\n    spacing,\n    component,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing || -8;\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      surplus: slotProps.additionalAvatar ?? componentsProps?.additionalAvatar,\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [SurplusSlot, surplusProps] = useSlot('surplus', {\n    elementType: Avatar,\n    externalForwardedProps,\n    className: classes.avatar,\n    ownerState,\n    additionalProps: {\n      variant\n    }\n  });\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    style: {\n      '--AvatarGroup-spacing': marginValue ? `${marginValue}px` : undefined,\n      ...other.style\n    },\n    children: [extraAvatars ? /*#__PURE__*/_jsx(SurplusSlot, {\n      ...surplusProps,\n      children: extraAvatarsElement\n    }) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object,\n    surplus: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    surplus: PropTypes.elementType\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    disableRipple: disableRipple,\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["SPACINGS","small","medium","AvatarGroupRoot","styled","name","slot","overridesResolver","props","styles","avatarGroupClasses","avatar","root","memoTheme","_ref","theme","display","flexDirection","avatarClasses","border","vars","palette","background","default","boxSizing","marginLeft","React","inProps","ref","useDefaultProps","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","slots","spacing","total","variant","other","clampedMax","ownerState","classes","composeClasses","getAvatarGroupUtilityClass","useUtilityClasses","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","marginValue","undefined","externalForwardedProps","surplus","additionalAvatar","SurplusSlot","surplusProps","useSlot","elementType","Avatar","additionalProps","_jsxs","as","clsx","style","_jsx","slice","reverse","map","createSvgIcon","d","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","capitalize","size","color","text","secondary","variants","disableRipple","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","createSimplePaletteValueFilter","_ref2","mainChannel","main","_ref3","checkboxClasses","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","composedClasses","getCheckboxUtilityClass","type","fontSize","DialogTitleRoot","Typography","padding","flex","id","idProp","getDialogTitleUtilityClass","titleId","DialogContext"],"sourceRoot":""}