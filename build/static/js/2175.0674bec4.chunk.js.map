{"version":3,"file":"static/js/2175.0674bec4.chunk.js","mappings":"0QAcO,SAASA,IACd,MAAM,eAAEC,EAAc,kBAAEC,IAAsBC,EAAAA,EAAAA,MAIxCC,GAFeC,EAAAA,EAAAA,MAESC,IAAI,YAE5BC,GAAwBC,EAAAA,EAAAA,cAAYC,UACxC,UACQR,GACR,CAAE,MAAOS,GACPC,QAAQD,MAAMA,EAChB,IACC,CAACT,IAEEW,GAAwBJ,EAAAA,EAAAA,cAAYC,UACxC,UACQR,EAAe,CAAEY,oBAAqB,CAAEC,YAAa,WAC7D,CAAE,MAAOJ,GACPC,QAAQD,MAAMA,EAChB,IACC,CAACT,IAEEc,GAA2BP,EAAAA,EAAAA,cAAYC,UAC3C,UACQP,EAAkB,CAAEc,SAAU,CAAEZ,SAAUA,GAAYa,EAAAA,EAAOC,KAAKC,eAC1E,CAAE,MAAOT,GACPC,QAAQD,MAAMA,EAChB,IACC,CAACR,EAAmBE,IAEjBgB,GAA2BZ,EAAAA,EAAAA,cAAYC,UAC3C,UACQP,EAAkB,CACtBc,SAAU,CAAEZ,SAAUA,GAAYa,EAAAA,EAAOC,KAAKC,cAC9CN,oBAAqB,CAAEC,YAAa,WAExC,CAAE,MAAOJ,GACPC,QAAQD,MAAMA,EAChB,IACC,CAACR,EAAmBE,IAEvB,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,IAAK,EAAGC,QAAS,OAAQC,cAAe,UAAWC,SAAA,EAC5DC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKP,GAAI,CAAEQ,UAAW,UAAWJ,SAAC,6BAItDC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,WAAS,EACTC,MAAM,UACNC,KAAK,QACLL,QAAQ,YACRM,QAASrB,EAAyBY,SACnC,2BAIDC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,WAAS,EACTC,MAAM,UACNC,KAAK,QACLL,QAAQ,OACRM,QAAShB,EAAyBO,SACnC,2BAIDC,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACd,GAAI,CAAEe,YAAa,aAE5BV,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,WAAS,EACTC,MAAM,UACNC,KAAK,QACLL,QAAQ,YACRM,QAAS7B,EAAsBoB,SAChC,wBAGDC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,WAAS,EAACC,MAAM,UAAUC,KAAK,QAAQL,QAAQ,OAAOM,QAASxB,EAAsBe,SAAC,yBAKpG,CC1FA,MAAMY,EAAW,CAAEC,MAAO,qBAAqBvB,EAAAA,EAAOwB,WAEvC,SAASC,IACtB,OACErB,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAhB,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CAAAjB,UACLN,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,IAAEY,EAASC,YAGpBZ,EAAAA,EAAAA,KAAC5B,EAAe,MAGtB,C","sources":["auth/view/auth0/auth0-sign-in-view.jsx","pages/auth/auth0/sign-in.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\n\nimport { useSearchParams } from 'src/routes/hooks';\n\nimport { CONFIG } from 'src/global-config';\n\n// ----------------------------------------------------------------------\n\nexport function Auth0SignInView() {\n  const { loginWithPopup, loginWithRedirect } = useAuth0();\n\n  const searchParams = useSearchParams();\n\n  const returnTo = searchParams.get('returnTo');\n\n  const handleSignInWithPopup = useCallback(async () => {\n    try {\n      await loginWithPopup();\n    } catch (error) {\n      console.error(error);\n    }\n  }, [loginWithPopup]);\n\n  const handleSignUpWithPopup = useCallback(async () => {\n    try {\n      await loginWithPopup({ authorizationParams: { screen_hint: 'signup' } });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [loginWithPopup]);\n\n  const handleSignInWithRedirect = useCallback(async () => {\n    try {\n      await loginWithRedirect({ appState: { returnTo: returnTo || CONFIG.auth.redirectPath } });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [loginWithRedirect, returnTo]);\n\n  const handleSignUpWithRedirect = useCallback(async () => {\n    try {\n      await loginWithRedirect({\n        appState: { returnTo: returnTo || CONFIG.auth.redirectPath },\n        authorizationParams: { screen_hint: 'signup' },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [loginWithRedirect, returnTo]);\n\n  return (\n    <Box sx={{ gap: 3, display: 'flex', flexDirection: 'column' }}>\n      <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\n        Sign in to your account\n      </Typography>\n\n      <Button\n        fullWidth\n        color=\"primary\"\n        size=\"large\"\n        variant=\"contained\"\n        onClick={handleSignInWithRedirect}\n      >\n        Sign in with Redirect\n      </Button>\n\n      <Button\n        fullWidth\n        color=\"primary\"\n        size=\"large\"\n        variant=\"soft\"\n        onClick={handleSignUpWithRedirect}\n      >\n        Sign up with Redirect\n      </Button>\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      <Button\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        variant=\"contained\"\n        onClick={handleSignInWithPopup}\n      >\n        Sign in with Popup\n      </Button>\n      <Button fullWidth color=\"inherit\" size=\"large\" variant=\"soft\" onClick={handleSignUpWithPopup}>\n        Sign up with Popup\n      </Button>\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CONFIG } from 'src/global-config';\n\nimport { Auth0SignInView } from 'src/auth/view/auth0';\n\n// ----------------------------------------------------------------------\n\nconst metadata = { title: `Sign in | Auth0 - ${CONFIG.appName}` };\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> {metadata.title}</title>\n      </Helmet>\n\n      <Auth0SignInView />\n    </>\n  );\n}\n"],"names":["Auth0SignInView","loginWithPopup","loginWithRedirect","useAuth0","returnTo","useSearchParams","get","handleSignInWithPopup","useCallback","async","error","console","handleSignUpWithPopup","authorizationParams","screen_hint","handleSignInWithRedirect","appState","CONFIG","auth","redirectPath","handleSignUpWithRedirect","_jsxs","Box","sx","gap","display","flexDirection","children","_jsx","Typography","variant","textAlign","Button","fullWidth","color","size","onClick","Divider","borderStyle","metadata","title","appName","Page","_Fragment","Helmet"],"sourceRoot":""}