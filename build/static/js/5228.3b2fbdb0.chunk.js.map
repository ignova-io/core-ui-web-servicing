{"version":3,"file":"static/js/5228.3b2fbdb0.chunk.js","mappings":"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","sources":["sections/_examples/extra/upload-view/view.jsx","pages/components/extra/upload/index.jsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useBoolean } from 'minimal-shared/hooks';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport { fData } from 'src/utils/format-number';\n\nimport { Iconify } from 'src/components/iconify';\nimport { Upload, UploadBox, UploadAvatar } from 'src/components/upload';\n\nimport { ComponentLayout } from '../../layout';\n\n// ----------------------------------------------------------------------\n\nexport function UploadView() {\n  const showPreview = useBoolean();\n\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const [avatarUrl, setAvatarUrl] = useState(null);\n\n  const handleDropSingleFile = useCallback((acceptedFiles) => {\n    const newFile = acceptedFiles[0];\n    setFile(newFile);\n  }, []);\n\n  const handleDropAvatar = useCallback((acceptedFiles) => {\n    const newFile = acceptedFiles[0];\n    setAvatarUrl(newFile);\n  }, []);\n\n  const handleDropMultiFile = useCallback(\n    (acceptedFiles) => {\n      setFiles([...files, ...acceptedFiles]);\n    },\n    [files]\n  );\n\n  const handleRemoveFile = (inputFile) => {\n    const filesFiltered = files.filter((fileFiltered) => fileFiltered !== inputFile);\n    setFiles(filesFiltered);\n  };\n\n  const handleRemoveAllFiles = () => {\n    setFiles([]);\n  };\n\n  const DEMO_COMPONENTS = [\n    {\n      name: 'Upload single file',\n      component: (\n        <Upload value={file} onDrop={handleDropSingleFile} onDelete={() => setFile(null)} />\n      ),\n    },\n    {\n      name: 'Upload multi file',\n      component: (\n        <>\n          <FormControlLabel\n            label=\"Show thumbnails\"\n            control={\n              <Switch\n                checked={showPreview.value}\n                onClick={showPreview.onToggle}\n                inputProps={{ id: 'show-thumbnails-switch' }}\n              />\n            }\n            sx={{ mb: 3, width: 1, justifyContent: 'flex-end' }}\n          />\n          <Upload\n            multiple\n            thumbnail={showPreview.value}\n            value={files}\n            onDrop={handleDropMultiFile}\n            onRemove={handleRemoveFile}\n            onRemoveAll={handleRemoveAllFiles}\n            onUpload={() => console.info('ON UPLOAD')}\n          />\n        </>\n      ),\n    },\n    {\n      name: 'Upload avatar',\n      component: (\n        <UploadAvatar\n          value={avatarUrl}\n          onDrop={handleDropAvatar}\n          validator={(fileData) => {\n            if (fileData.size > 1000000) {\n              return { code: 'file-too-large', message: `File is larger than ${fData(1000000)}` };\n            }\n            return null;\n          }}\n          helperText={\n            <Typography\n              variant=\"caption\"\n              sx={{\n                mt: 3,\n                mx: 'auto',\n                display: 'block',\n                textAlign: 'center',\n                color: 'text.disabled',\n              }}\n            >\n              Allowed *.jpeg, *.jpg, *.png, *.gif\n              <br /> max size of {fData(3145728)}\n            </Typography>\n          }\n        />\n      ),\n    },\n    {\n      name: 'Upload box',\n      component: (\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <UploadBox />\n          <UploadBox\n            placeholder={\n              <Stack spacing={0.5} sx={{ alignItems: 'center' }}>\n                <Iconify icon=\"eva:cloud-upload-fill\" width={40} />\n                <Typography variant=\"body2\">Upload file</Typography>\n              </Stack>\n            }\n            sx={{\n              mb: 3,\n              py: 2.5,\n              flexGrow: 1,\n              height: 'auto',\n            }}\n          />\n        </Box>\n      ),\n    },\n  ];\n\n  return (\n    <ComponentLayout\n      sectionData={DEMO_COMPONENTS}\n      heroProps={{\n        heading: 'Upload',\n        moreLinks: ['https://react-dropzone.js.org/#section-basic-example'],\n      }}\n    />\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CONFIG } from 'src/global-config';\n\nimport { UploadView } from 'src/sections/_examples/extra/upload-view';\n\n// ----------------------------------------------------------------------\n\nconst metadata = { title: `Upload | Components - ${CONFIG.appName}` };\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> {metadata.title}</title>\n      </Helmet>\n\n      <UploadView />\n    </>\n  );\n}\n"],"names":["UploadView","showPreview","useBoolean","files","setFiles","useState","file","setFile","avatarUrl","setAvatarUrl","handleDropSingleFile","useCallback","acceptedFiles","newFile","handleDropAvatar","handleDropMultiFile","DEMO_COMPONENTS","name","component","_jsx","Upload","value","onDrop","onDelete","_jsxs","_Fragment","children","FormControlLabel","label","control","Switch","checked","onClick","onToggle","inputProps","id","sx","mb","width","justifyContent","multiple","thumbnail","onRemove","inputFile","filesFiltered","filter","fileFiltered","onRemoveAll","handleRemoveAllFiles","onUpload","console","info","UploadAvatar","validator","fileData","size","code","message","fData","helperText","Typography","variant","mt","mx","display","textAlign","color","Box","gap","UploadBox","placeholder","Stack","spacing","alignItems","Iconify","icon","py","flexGrow","height","ComponentLayout","sectionData","heroProps","heading","moreLinks","metadata","title","CONFIG","appName","Page","Helmet"],"sourceRoot":""}