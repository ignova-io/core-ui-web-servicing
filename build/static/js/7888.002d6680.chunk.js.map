{"version":3,"file":"static/js/7888.002d6680.chunk.js","mappings":"iNAUO,SAASA,EAAYC,GASxB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAT0B,GAC3BC,EAAE,OACFC,EAAM,OACNC,EAAM,OACNC,EAAM,UACNC,EAAS,YACTC,EAAW,MACXC,EAAQ,aACLC,GACJpB,EACC,OACEqB,EAAAA,EAAAA,MAACC,EAAW,CAACN,OAAQA,EAAQH,GAAIA,KAAQO,EAAKG,SAAA,EAC5CC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAU,MACVC,IAAI,gBACJC,IAAW,OAANd,QAAM,IAANA,EAAAA,EAAU,GAAGe,EAAAA,EAAOC,iDACZ,OAATb,QAAS,IAATA,OAAS,EAATA,EAAWc,IACflB,GAAI,CACF,CACEmB,MAAO,EACPC,SAAU,QAERC,MAAMC,QAAiB,OAATlB,QAAS,IAATA,GAAc,QAALhB,EAATgB,EAAWc,WAAG,IAAA9B,OAAL,EAATA,EAAgBY,IACX,QADcX,EACvB,OAATe,QAAS,IAATA,GAAc,QAALd,EAATc,EAAWc,WAAG,IAAA5B,OAAL,EAATA,EAAgBU,UAAE,IAAAX,EAAAA,EAAI,GACvB,CAAU,OAATe,QAAS,IAATA,GAAc,QAALb,EAATa,EAAWc,WAAG,IAAA3B,OAAL,EAATA,EAAgBS,OAIxBM,IACCK,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CACTC,QAAQ,QACK,OAATpB,QAAS,IAATA,OAAS,EAATA,EAAWE,MACfN,GAAI,CACF,CACEyB,GAAI,EACJC,UAAW,SACXC,MAAO,oBAELN,MAAMC,QAAiB,OAATlB,QAAS,IAATA,GAAgB,QAAPZ,EAATY,EAAWE,aAAK,IAAAd,OAAP,EAATA,EAAkBQ,IACX,QADcP,EACzB,OAATW,QAAS,IAATA,GAAgB,QAAPV,EAATU,EAAWE,aAAK,IAAAZ,OAAP,EAATA,EAAkBM,UAAE,IAAAP,EAAAA,EAAI,GACzB,CAAU,OAATW,QAAS,IAATA,GAAgB,QAAPT,EAATS,EAAWE,aAAK,IAAAX,OAAP,EAATA,EAAkBK,KACvBU,SAEDJ,IAIJD,IACCM,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CACTC,QAAQ,WACK,OAATpB,QAAS,IAATA,OAAS,EAATA,EAAWC,YACfL,GAAI,CACF,CACEyB,GAAI,EACJC,UAAW,SACXC,MAAO,oBAELN,MAAMC,QAAiB,OAATlB,QAAS,IAATA,GAAsB,QAAbR,EAATQ,EAAWC,mBAAW,IAAAT,OAAb,EAATA,EAAwBI,IACX,QADcH,EAC/B,OAATO,QAAS,IAATA,GAAsB,QAAbN,EAATM,EAAWC,mBAAW,IAAAP,OAAb,EAATA,EAAwBE,UAAE,IAAAH,EAAAA,EAAI,GAC/B,CAAU,OAATO,QAAS,IAATA,GAAsB,QAAbL,EAATK,EAAWC,mBAAW,IAAAN,OAAb,EAATA,EAAwBC,KAC7BU,SAEDL,IAIJH,GAAUA,IAGjB,CAIA,MAAMO,GAAcmB,EAAAA,EAAAA,IAAO,MAAO,CAChCC,kBAAoBC,IAAU,CAAC,SAAU,MAAMC,SAASD,IADtCF,EAEjBI,IAAA,IAAC,OAAE7B,EAAM,MAAE8B,GAAOD,EAAA,MAAM,CACzBE,SAAU,EACVC,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBC,QAASP,EAAMQ,QAAQ,EAAG,MACtBtC,GAAU,CACZuC,aAAyC,EAA3BT,EAAMU,MAAMD,aAC1BE,iBAAiBC,EAAAA,EAAAA,IAASZ,EAAMa,KAAKC,QAAQC,KAAK,cAAe,KACjEC,OAAQ,eAAcJ,EAAAA,EAAAA,IAASZ,EAAMa,KAAKC,QAAQC,KAAK,cAAe,QAEzE,G,4JCzFM,SAASE,EAAU/D,GAOtB,IAPuB,YACzBgE,EAAW,aACXC,EAAY,gBACZC,EAAe,iBACfC,EAAgB,kBAChBC,EAAiB,kBACjBC,GACDrE,EACKsE,EAAU,CAACC,EAAAA,EAAUC,EAAAA,EAAYC,EAAAA,EAAWC,EAAAA,EAAYC,EAAAA,EAAOC,EAAAA,GAqBnE,OAnBIR,IACFE,EAAUA,EAAQO,QAAQC,GAAWA,IAAWJ,EAAAA,KAE9CR,IACFI,EAAUA,EAAQO,QAAQC,GAAWA,IAAWP,EAAAA,KAE9CF,IACFC,EAAUA,EAAQO,QAAQC,GAAWA,IAAWN,EAAAA,KAE9CL,IACFG,EAAUA,EAAQO,QAAQC,GAAWA,IAAWL,EAAAA,KAE9CT,IACFM,EAAUA,EAAQO,QAAQC,GAAWA,IAAWF,EAAAA,KAE9CX,IACFK,EAAUA,EAAQO,QAAQC,GAAWA,IAAWH,EAAAA,KAG3CL,CACT,CCnCO,MAAMS,EAAkB,CAC7BC,MAAMC,E,QAAAA,GAAc,mB,eCMf,SAASC,EAAQlF,GAYpB,IAZqB,OACvBmF,EAAM,YACNnB,EAAW,aACXC,EAAY,aACZmB,EAAY,gBACZlB,EAAe,iBACfC,EAAgB,kBAChBC,EAAiB,kBACjBC,EAAiB,kBACjBgB,EAAiB,UACjBC,KACGlE,GACJpB,EACC,MAAMuF,EAAaJ,EAASA,EAAOK,OAAS,EAE5C,OACEhE,EAAAA,EAAAA,KAACiE,EAAAA,GAAa,CACZN,OAAQA,EACRO,UAAW,CAAEC,MAAO,KACpBC,SAAU,CAAEC,OAAQN,EAAa,GACjCO,WAAY,CAAEC,sBAAsB,GACpCzB,QAASP,EAAW,CAClBC,cACAC,eACAC,kBACAC,mBACAC,oBACAC,sBAEF2B,GAAI,CACFC,KAAMpD,IAAgB,IAAf,MAAEqD,GAAOrD,EACVwC,GACFA,EAAkBa,EACpB,GAGJC,QAAS,CACPC,QAAS,EACP5E,EAAAA,EAAAA,KAAC6E,EAAY,CAASd,WAAYA,EAAYH,aAAcA,GAAzC,GACnB,UAGJkB,OAAQ,CACNC,UAAWA,KAAM/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,iBAC1CC,WAAYA,KAAMlF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,mBAC3CE,YAAaA,KAAMnF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,oBAC5CG,kBAAmBA,KAAMpF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,gBAClDI,mBAAoBA,KAAMrF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,iBACnDK,SAAUA,KAAMtF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,wBACzCM,SAAUA,KAAMvF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,yBACzCO,mBAAoBA,KAAMxF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,yBACnDQ,oBAAqBA,KAAMzF,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,0BAEtDnB,WAAW4B,EAAAA,EAAAA,IAAa,CAACnC,EAAgBC,KAAMM,OAC3ClE,GAGV,CAIA,SAASiF,EAAYc,GAAgC,IAA/B,WAAE5B,EAAU,aAAEH,GAAc+B,EAChD,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,MAEzB,OAAIjC,EACK,MAIP/D,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFC,UAAU,OACV4D,UAAU,eACVzE,GAAI,CACFyG,WAAY,QACZpE,WAAY,SACZD,QAAS,cACTG,eAAgB,UAChB7B,SAAA,EAEFF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAAQ,IAAE6F,EAAe,EAAE,OAAU,MAAI7B,IAG/C,C,eCzFO,SAASgC,EAAYpC,GAC1B,MAAOqC,EAAUC,IAAeC,EAAAA,EAAAA,WAAU,GAiB1C,MAAO,CACLF,WACAG,KAAMH,GAAY,EAClBI,QAlBiBC,EAAAA,EAAAA,cAChBC,IACC,MAAMC,EAAa5C,EAAO6C,WAAWC,GACpB,UAAfA,EAAMC,KAAmBD,EAAME,SAAWL,EAAWG,EAAMrG,MAAQkG,IAGrEL,EAAYM,EAAW,GAEzB,CAAC5C,IAWDiD,SARkBP,EAAAA,EAAAA,cAAY,KAC9BJ,GAAa,EAAE,GACd,IAODA,cAEJ,C,6KCrBA,MAAMY,GAAe,EAEfC,EAAiBC,EAAAA,GAAUC,KAE3BC,EAAa,CACjBC,kBAAmBL,EACnBM,kBAAmBN,EACnBO,sBAAuBP,GA6HlBQ,eAAeC,EAAmBC,GACvC,MAAMC,EAAM,CAACV,EAAgB,CAAEW,OAAQ,CAAEC,SAAU,mBAK7CC,EAAO,CAAEJ,oBACTK,QAAYC,EAAAA,GAAMC,KAAKhB,EAAgBa,GAkB7C,OAZAI,EAAAA,EAAAA,GACEP,GACCQ,IACC,MAEMC,EAAgB,IAFOD,EAAYC,cAEOV,GAEhD,MAAO,IAAKS,EAAaC,gBAAe,IAE1C,GAGKL,EAAID,IACb,C,4LC9JO,MAAMO,GAAiBjH,EAAAA,EAAAA,KAAOzC,IAAA,IAAC,SAAEwH,EAAQ,SAAEjG,EAAQ,SAAEoI,KAAavI,GAAOpB,EAAA,OAC9EqB,EAAAA,EAAAA,MAACuI,EAAAA,EAAc,CAACD,SAAUA,KAAcvI,EAAKG,SAAA,CAC1CA,GACDC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CACNxE,MAAO,GACPyE,MACKe,GAAYmC,EAAa,6BAAiC,kCAGlD,GATWlH,EAU3BI,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,IACdC,EAAMwE,WAAWuC,SACpB7G,OAAQ,GACR8G,YAAahH,EAAMQ,QAAQ,KAC3BF,eAAgB,gBAChB2G,aAAcjH,EAAMQ,QAAQ,KAC5Bd,MAAOM,EAAMa,KAAKC,QAAQoG,KAAKC,UAC/BxG,gBAAiBX,EAAMa,KAAKC,QAAQsG,WAAWC,QAChD,IAIYC,GAAe3H,EAAAA,EAAAA,IAAO4H,EAAAA,EAAP5H,EAAmB0E,IAAA,IAAC,MAAErE,GAAOqE,EAAA,MAAM,CAC7DmD,IAAK,GACLC,KAAM,EACNC,OAAQ,EACRxI,MAAO,GACPgB,OAAQ,GACRyH,SAAU,WACVlH,aAAc,gBACdmH,UAAW5H,EAAMa,KAAKgH,cAAcC,QACpCpI,MAAOM,EAAMa,KAAKC,QAAQgH,QAAQC,aAClCpH,gBAAiBX,EAAMa,KAAKC,QAAQgH,QAAQE,KAC5CC,WAAYjI,EAAMkI,YAAYC,OAAO,CAAC,OAAQ,CAAEC,SAAUpI,EAAMkI,YAAYE,SAASC,UACrF,UAAW,CAAE1H,gBAAiBX,EAAMa,KAAKC,QAAQgH,QAAQQ,QAC1D,I,gDClBM,SAASC,EAAWrL,GAAuD,IAAtD,SAAEwH,EAAQ,SAAE8D,EAAQ,aAAEC,EAAY,cAAEC,GAAexL,EAC7E,MAAM,KAAEyL,IAASC,EAAAA,EAAAA,KAEXC,GAASC,EAAAA,EAAAA,MAET9I,GAAQ+I,EAAAA,EAAAA,KACRC,GAAOC,EAAAA,EAAAA,GAAcjJ,EAAMkJ,YAAYC,GAAG,QAE1C,MAAEC,EAAK,YAAEC,EAAW,YAAEC,EAAW,aAAEC,EAAY,aAAEC,EAAY,iBAAEC,GC/BhE,SAAmBvM,GAAmC,IAAlC,cAAEwM,EAAa,aAAEjB,GAAcvL,EACxD,MAAM,SAAEyM,EAAQ,aAAEJ,GAAiBd,EAE7BmB,EAA6BL,EAAaxH,QAC7C8H,GAAgBA,EAAYC,KAAOJ,IAGhCK,EAAcJ,EAASA,EAASjH,OAAS,GAEzC0G,EAAQQ,EAA2BlH,OAAS,EAE5C2G,EAAcO,EAA2BI,KAAKH,GAAgBA,EAAYI,OAAMC,KAAK,MAErFT,IAAmBL,GACrBQ,EAA2BI,KAAKG,GAASA,EAAKC,SAAQtK,SAAS,UAGnE,IAAIwJ,EAAc,GAEdS,IAKFT,EAAc,GAJCS,EAAYM,WAAaX,EAAgB,QAAU,KAEtB,UAA5BK,EAAYO,YAA0B,eAAiBP,EAAYQ,QAKrF,MAAO,CACLnB,QACAC,cACAC,cACAC,aAAcK,EACdJ,aAAcO,EAAYS,UAC1Bf,mBAEJ,CDHIgB,CAAW,CAAEhC,eAAciB,cAAe,GAAO,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,OAE/CY,EAAoBnB,EAAa,GAEjCoB,GAA0B5F,EAAAA,EAAAA,cAAYgB,UAC1C,IACOiD,GACHN,UFiID3C,eAAiC6E,GAIlCrF,SACIgB,EAAAA,GAAMsE,IAAIrF,EAAgB,CAAEW,OAAQ,CAAEyE,iBAAgBxE,SAAU,mBAOxEK,EAAAA,EAAAA,GACE,CAACjB,EAAgB,CAAEW,OAAQ,CAAEC,SAAU,oBACtCM,IACC,MAEMC,EAFuBD,EAAYC,cAEEqD,KAAKvB,GAC9CA,EAAaqB,KAAOc,EAAiB,IAAKnC,EAAcqC,YAAa,GAAMrC,IAG7E,MAAO,IAAK/B,EAAaC,gBAAe,IAE1C,EAEJ,CEvJYoE,CAAkBtC,EAAaqB,IAErC,MAAMkB,EAAe,GAAGC,EAAAA,EAAMC,UAAUxF,WAAW+C,EAAaqB,MAEhEqB,EAAAA,EAAAA,kBAAgB,KACdtC,EAAOuC,KAAKJ,EAAa,GAE7B,CAAE,MAAOK,GACPC,QAAQD,MAAMA,EAChB,IACC,CAAC5C,EAAaqB,GAAId,EAAMN,EAAeG,IAsB1C,OACEnK,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,KAAKb,GAAI,CAAEoC,QAAS,QAAS1B,UAC1CF,EAAAA,EAAAA,MAACuI,EAAAA,EAAc,CACbyE,QAASZ,EACT5M,GAAI,CACFyN,GAAI,IACJC,GAAI,IACJC,IAAK,KACDhH,GAAY,CAAEiH,QAAS,oBAC3BlN,SAAA,EAEFC,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CACJlM,MAAM,QACNmM,QAAQ,WACRC,aAActD,EAAWC,EAAaqC,YAAc,EAAErM,SAErD2K,GAnCP1K,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CAACrM,QAASkK,EAAmB,SAAW,YAAaqC,aAAa,GAAErN,UACxEC,EAAAA,EAAAA,KAACqN,EAAAA,EAAW,CAACxM,QAAQ,UAAUxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,IAAKzB,SAC1D8K,EAAayC,MAAM,EAAG,GAAGhC,KAAKH,IAC7BnL,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAAsBpN,IAAKgL,EAAYI,KAAMnL,IAAK+K,EAAYqC,WAAxDrC,EAAYC,WAO/BpL,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CAACrM,QAA0B,OAAjBmL,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBN,OAAQ0B,aAAa,GAAErN,UACxDC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CACLpN,IAAsB,OAAjB6L,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBT,KACxBnL,IAAsB,OAAjB4L,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBwB,UACxBnO,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,WAwBvBsI,IACAjK,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CACXtE,QAASuB,EACTlC,UAAWmC,EACXnL,UAAW,CACT2J,QAAS,CAAEuE,QAAQ,GACnBlF,UAAW,CACTkF,QAAQ,EACRtO,GAAI,IACE0K,EAAaqC,aAAe,CAC9BpL,MAAO,eACP4M,WAAY,4BAOtB/N,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFZ,GAAI,CACFoC,QAAS,OACToM,UAAW,UACXnM,WAAY,WACZC,cAAe,UACf5B,SAAA,EAEFC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CACT+M,QAAM,EACN9M,QAAQ,QACRX,UAAU,OACVb,GAAI,CAAEyO,GAAI,IAAKC,SAAU,GAAI/M,MAAO,iBAAkBjB,UAErDiO,EAAAA,EAAAA,IAAOlD,OAGPf,EAAaqC,cACdpM,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAU,OACVb,GAAI,CACFmB,MAAO,EACPgB,OAAQ,EACRO,aAAc,MACdkL,QAAS,yBAU7B,C,uIE5HO,SAASgB,KAAkB,IAADC,EAC/B,MAAM,KAAEjE,IAASC,EAAAA,EAAAA,KAEXiE,GAAcC,EAAAA,EAAAA,OAEb1C,EAAQ2C,IAAanI,EAAAA,EAAAA,UAAS,UAE/BoI,GAAqBjI,EAAAA,EAAAA,cAAakI,IACtCF,EAAUE,EAAMC,OAAOC,MAAM,GAC5B,IA0FH,OACE5O,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CACJrM,QAAS6K,EACT0B,aAAa,GACbD,QAAQ,WACRuB,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAAU7O,UAE1DC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CACLnN,IAAS,OAAJ6J,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,SACX1O,IAAS,OAAJ8J,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YACXkC,QAASsB,EAAY/H,OACrB/G,GAAI,CAAEyP,OAAQ,UAAWtO,MAAO,GAAIgB,OAAQ,IAAKzB,SAE5C,OAAJkK,QAAI,IAAJA,GAAiB,QAAbiE,EAAJjE,EAAMU,mBAAW,IAAAuD,OAAb,EAAJA,EAAmBa,OAAO,GAAGC,mBArGpCnP,EAAAA,EAAAA,MAACoP,EAAAA,EAAa,CACZ9I,KAAMgI,EAAYhI,KAClB+I,SAAUf,EAAYe,SACtBtI,QAASuH,EAAYvH,QACrBnH,UAAW,CACT0P,MAAO,CAAE9P,GAAI,CAAE+P,EAAG,EAAGC,GAAI,EAAGvO,GAAI,KAChCwO,MAAO,CAAEC,UAAW,aACpBxP,SAAA,EAEFF,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFZ,GAAI,CACFyN,GAAI,EACJ0C,GAAI,EACJC,GAAI,EACJzC,IAAK,EACLvL,QAAS,OACTC,WAAY,UACZ3B,SAAA,EAEFC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CAACtE,QAAa,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YAAalC,UAAe,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,SAE3D1P,EAAAA,EAAAA,KAAC2P,EAAAA,EAAO,CAAChQ,MAAM,UAASI,UACtBC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC5O,MAAM,QAAOjB,UACvBC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,wCAKpBjF,EAAAA,EAAAA,KAAC6P,EAAAA,EAAO,CAACxQ,GAAI,CAAEyQ,YAAa,aAE5BjQ,EAAAA,EAAAA,MAACkQ,EAAAA,EAAQ,CAAC1Q,GAAI,CAAE2Q,GAAI,GAAKjD,GAAI,IAAMhN,SAAA,EACjCF,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAAAlQ,SAAA,EACPC,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CACJrM,QAAS6K,EACT0B,aAAa,GACb/N,GAAI,CACFmB,MAAO,GACPgB,OAAQ,GACRE,WAAY,SACZE,eAAgB,SAChB,CAAC,MAAMsO,EAAAA,EAAaC,SAAU,CAC5B3P,MAAO,GACPgB,OAAQ,GACR4O,UAAW,QACXnH,SAAU,cAKhBjJ,EAAAA,EAAAA,KAACqQ,EAAAA,EAAW,CAACC,WAAS,EAAAvQ,UACpBC,EAAAA,EAAAA,KAACuQ,EAAAA,EAAM,CACLC,QAAM,EACNF,WAAS,EACT7B,MAAO/C,EACP+E,SAAUnC,EACVoC,OAAO1Q,EAAAA,EAAAA,KAAC2Q,EAAAA,GAAS,IACjBC,WAAY,CAAExF,GAAI,sBAClB/L,GAAI,CACF,CAAC,MAAMwR,EAAAA,EAAerN,QAAS,CAAEsN,MAAO,GACxC,CAAC,MAAMC,EAAAA,EAAiBL,SAAU,CAChC5K,WAAY,QACZkL,cAAe,eAEjBjR,SAED,CAAC,SAAU,SAAU,OAAQ,WAAWuL,KAAK2F,IAC5CjR,EAAAA,EAAAA,KAAA,UAAqByO,MAAOwC,EAAOlR,SAChCkR,GADUA,aAQrBpR,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAAAlQ,SAAA,EACPC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,uBAAuB,cAIlDpF,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAAAlQ,SAAA,EACPC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,wBAAwB,sBA4B3D,C,wCCzIO,SAASiM,GAAmB1S,GAAmC,IAAlC,GAAEa,EAAE,UAAE8R,EAAY,KAAMvR,GAAOpB,EACjE,OAAOkC,MAAM0Q,KAAK,CAAEpN,OAAQmN,IAAa,CAACE,EAAG3M,KAC3C7E,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAEFZ,GAAI,CACF,MACE2N,IAAK,EACLD,GAAI,IACJD,GAAI,IACJrL,QAAS,OACTC,WAAY,cAEVhB,MAAMC,QAAQtB,GAAMA,EAAK,CAACA,OAE5BO,EAAKG,SAAA,EAETC,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,OAEtD3B,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAACzP,QAAS,EAAGP,SAAU,EAAExB,SAAA,EAC7BC,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACjS,GAAI,CAAEmB,MAAO,IAAMgB,OAAQ,OACrCxB,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACjS,GAAI,CAAEmB,MAAO,GAAKgB,OAAQ,WAjBjCkD,IAqBX,CAIO,SAAS8M,GAAkBnQ,GAAoB,IAAnB,GAAEhC,KAAOO,GAAOyB,EACjD,OACExB,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFZ,GAAI,CAAC,CAAEmB,MAAO,EAAGiB,QAAS,OAAQC,WAAY,aAAgBhB,MAAMC,QAAQtB,GAAMA,EAAK,CAACA,OACpFO,EAAKG,SAAA,EAETC,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,OACtD3B,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAACzP,QAAS,EAAGP,SAAU,EAAGlC,GAAI,CAAEoS,GAAI,GAAI1R,SAAA,EAC5CC,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACjS,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,OACnCxB,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACjS,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,UAGrCxB,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,OACtDxB,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIiQ,GAAI,MAC9DzR,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIkQ,GAAI,OAGpE,CAIO,SAASC,GAAgBhM,GAAoB,IAAnB,GAAEtG,KAAOO,GAAO+F,EAC/C,OACE3F,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFZ,GAAI,CACF,MACEuS,GAAI,EACJrQ,SAAU,EACVE,QAAS,OACTE,cAAe,cAEbjB,MAAMC,QAAQtB,GAAMA,EAAK,CAACA,OAE5BO,EAAKG,UAETF,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAAC7P,WAAW,SAAQ3B,SAAA,EACxBC,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACzQ,QAAQ,WAAWxB,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,OACtDxB,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CACPjS,GAAI,CACFyO,GAAI,EACJhN,GAAI,EACJU,OAAQ,GACRhB,MAAO,QAGXR,EAAAA,EAAAA,KAACsR,GAAAA,EAAQ,CAACjS,GAAI,CAAEyO,GAAI,EAAGtN,MAAO,IAAMgB,OAAQ,OAC5CxB,EAAAA,EAAAA,KAAC6R,GAAAA,EAAgB,CAAC7Q,MAAM,UAAU8Q,UAAW,QAIrD,C,gBC5EO,SAASC,GAAoBvT,GAAqC,IAApC,MAAEwT,EAAK,QAAEC,EAAO,cAAEC,GAAe1T,EACpE,MAAM2T,EAAeF,EAAQjO,OAEvBoO,GAAYD,KAAkBH,EAqCpC,OACEnS,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEF,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKxB,GAAI,CAAE0N,GAAI,IAAKe,GAAI,GAAI/N,SAAA,CAAC,aACpCoS,EAAa,OAGzBC,GAxCHpS,EAAAA,EAAAA,KAACqS,GAAAA,EAAc,CACbL,MAAOA,EACP3S,GAAI,CACF+P,EAAG,EACHqC,GAAI,OACJjR,MAAO,oBACPyM,QAAS,yBAMbjN,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,KAAKb,GAAI,CAAE,OAAQ,CAAEoC,QAAS,SAAW1B,SACrDkS,EAAQ3G,KAAKgH,IACZtS,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACuI,EAAAA,EAAc,CACbyE,QAASA,IAAMqF,EAAcI,GAC7BjT,GAAI,CACF2N,IAAK,EACLF,GAAI,IACJC,GAAI,IACJjH,WAAY,aACZ/F,SAAA,EAEFC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACpN,IAAKmS,EAAO/G,KAAMnL,IAAKkS,EAAO9E,YACrC8E,EAAO/G,SAXH+G,EAAOlH,YA4B1B,C,gBCpDO,SAASmH,GAAmB/T,GAAoC,IAADgU,EAAA,IAAlC,QAAEC,EAAU,GAAE,WAAEC,EAAU,GAAEC,GAAInU,EAClE,MAAMoU,EAAUF,EAAW1O,OAAS,EAE9B6O,EAAc,CAClBzH,IAAI0H,EAAAA,GAAAA,MACJC,YAAa,GACblH,KAAM4G,EACN7G,YAAa,OACbE,WAAWkH,EAAAA,EAAAA,IAAK,CAAEC,QAAS,IAC3BtH,SAAUgH,EAAGvH,IAWf,MAAO,CAAEyH,cAAatL,iBARG,CACvB6D,GAAIwH,GAAUE,EAAAA,GAAAA,MAAwB,QAAhBN,EAAGE,EAAW,UAAE,IAAAF,OAAA,EAAbA,EAAepH,GACxCH,SAAU,CAAC4H,GACXhI,aAAc,IAAI6H,EAAYC,GAC9BjM,KAAMkM,EAAU,QAAU,aAC1BxG,YAAa,GAIjB,CCKA,MAAM8G,GAAY,IAEZC,GAAqB,GAEpB,SAASC,GAAO5U,GAA6E,IAA5E,QAAE6U,EAAO,SAAEC,EAAQ,YAAEC,EAAW,cAAEtL,EAAa,uBAAEuL,GAAwBhV,EAC/F,MAAM2L,GAASC,EAAAA,EAAAA,OAET,KAAEH,IAASC,EAAAA,EAAAA,KAEX5I,GAAQ+I,EAAAA,EAAAA,KACRC,GAAOC,EAAAA,EAAAA,GAAcjJ,EAAMkJ,YAAYC,GAAG,QAE1C,WACJgJ,EAAU,aACVC,EAAY,cACZ1J,EAAa,eACb2J,EAAc,gBACdC,EAAe,kBACfC,GACEN,GAEGO,EAAgBC,IAAqB7N,EAAAA,EAAAA,UAAS,CAAE8L,MAAO,GAAIC,QAAS,KAErE+B,GAAYC,EAAAA,EAAAA,UAChB,MACE7I,GAAI,GAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,KACb8I,KAAM,GAAO,OAAJjK,QAAI,IAAJA,OAAI,EAAJA,EAAMiK,OACfxE,MAAO,GAAO,OAAJzF,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,QAChByE,QAAS,GAAO,OAAJlK,QAAI,IAAJA,OAAI,EAAJA,EAAMkK,UAClB5I,KAAM,GAAO,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMU,cACfG,cAAcsJ,EAAAA,EAAAA,MACd5G,UAAW,GAAO,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,WACpBwF,YAAa,GAAO,OAAJpK,QAAI,IAAJA,OAAI,EAAJA,EAAMoK,cACtB3I,OAAQ,YAEV,CAACzB,KAGHqK,EAAAA,EAAAA,YAAU,KACHhK,GACHqJ,GACF,GACC,CAACA,EAAgBrJ,IAEpB,MAAMiK,GAAkBlO,EAAAA,EAAAA,cAAY,KAC9BiE,EACFuJ,IAEA7J,GACF,GACC,CAACM,EAAMN,EAAe6J,IAEnBW,GAAqBnO,EAAAA,EAAAA,cAAY,KAChCiE,GACHN,IAEFG,EAAOuC,KAAKH,EAAAA,EAAMC,UAAUxF,KAAK,GAChC,CAACsD,EAAMN,EAAeG,IAEnBsK,GAAuBpO,EAAAA,EAAAA,cAC1BqO,IAGC,GAFAX,GAAmBY,IAAS,IAAWA,EAAW3C,MAAO0C,MAErDA,EAAY,CACd,MAAMzC,EAAUqB,EAASjQ,QAAQuR,GAC/BA,EAAQrJ,KAAKsJ,cAAczT,SAASsT,EAAWG,iBAGjDd,GAAmBY,IAAS,IAAWA,EAAW1C,aACpD,IAEF,CAACqB,IAGGwB,GAAwBzO,EAAAA,EAAAA,cAAY,KACxC0N,EAAkB,CAAE/B,MAAO,GAAIC,QAAS,IAAK,GAC5C,IAEG8C,GAAoB1O,EAAAA,EAAAA,cACxBgB,UACEyN,IAEA,MAAME,EAAU5J,GAAOjB,EAAOuC,KAAK,GAAGH,EAAAA,EAAMC,UAAUxF,WAAWoE,KAEjE,IAEE,GAAInD,EAAcgN,OAAO7T,SAASkR,EAAOlH,IAEvC,YADA4J,EAAO1C,EAAOlH,IAKhB,MAAM8J,EAAY5B,EAAS6B,MAAMP,GAAYA,EAAQxJ,KAAOkH,EAAOlH,KACnE,IAAK8J,EAEH,YADAtI,QAAQD,MAAM,uBAKhB,MAAM,iBAAEpF,GAAqBgL,GAAoB,CAC/CG,WAAY,CAACwC,GACbvC,GAAIqB,IAIApM,QAAYN,EAAmBC,GAEhCK,GAAQA,EAAImC,cACf6C,QAAQD,MAAM,iCAIhBqI,EAAOpN,EAAImC,aAAaqB,GAC1B,CAAE,MAAOuB,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,IAEF,CAAC2G,EAAUrL,EAAcgN,OAAQH,EAAuBd,EAAW7J,IAkD/DiL,EAAgBA,KACpBvV,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEF,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFZ,GAAI,CACF+P,EAAG,IACHiG,GAAI,EACJ5T,QAAS,OACTC,WAAY,SACZE,eAAgB,UAChB7B,SAAA,EAEA6T,IACA/T,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACiO,GAAc,KACfjO,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACZ,GAAI,CAAEkC,SAAU,SAIzBvB,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAAS0H,EAAgBxU,UACnCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CACNC,KAAM2O,EAAkB,6BAA+B,+BAIzDA,IACA5T,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAAS2H,EAAmBzU,UACtCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,+BAK/BjF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACZ,GAAI,CAAE+P,EAAG,IAAKwC,GAAI,GAAI7R,UAAG6T,IAnDhC5T,EAAAA,EAAAA,KAACsV,EAAAA,EAAiB,CAACC,YAAaT,EAAsB/U,UACpDC,EAAAA,EAAAA,KAACwV,EAAAA,EAAS,CACRlF,WAAS,EACT7B,MAAOqF,EAAe9B,MACtBvB,SAAWlC,GAAUkG,EAAqBlG,EAAMC,OAAOC,OACvDgH,YAAY,qBACZhW,UAAW,CACTiR,MAAO,CACLgF,gBACE1V,EAAAA,EAAAA,KAAC2V,EAAAA,EAAc,CAAC1M,SAAS,QAAOlJ,UAC9BC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,kBAAkB5F,GAAI,CAAE2B,MAAO,uBAKrD3B,GAAI,CAAEyB,GAAI,WAsCXuS,GAhFuBrT,EAAAA,EAAAA,KAACkR,GAAmB,KAmF1ClR,EAAAA,EAAAA,KAAC4V,EAAAA,EAAS,CAACvW,GAAI,CAAEgW,GAAI,GAAItV,SACtB+T,EAAe9B,OAAW/J,EAAcgN,OAAOjR,QAjEtDhE,EAAAA,EAAAA,KAAC+R,GAAoB,CACnBC,MAAO8B,EAAe9B,MACtBC,QAAS6B,EAAe7B,QACxBC,cAAe6C,KAnBjB/U,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,KAAIH,SAChBkI,EAAcgN,OAAO3J,KAAKY,IACzBlM,EAAAA,EAAAA,KAAC6J,EAAW,CAEVC,SAAU8J,EACV7J,aAAc9B,EAAc4N,KAAK3J,GACjClG,SAAUkG,IAAmBsH,EAC7BxJ,cAAeA,GAJVkC,cAqFf,OACErM,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAAC4I,EAAY,CAACiE,QAAS6G,EAAcrU,GAAI,CAAEoC,QAAS,CAAEqU,GAAI,SAAW/V,UACnEC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,sCAG3BjF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFZ,GAAI,CACF0W,UAAW,EACXC,KAAM,WACNxV,MAAO0S,GACPvR,cAAe,SACfF,QAAS,CAAEwU,GAAI,OAAQH,GAAI,QAC3BI,YAAa,aAAa5U,EAAMa,KAAKC,QAAQ+T,UAC7C5M,WAAYjI,EAAMkI,YAAYC,OAAO,CAAC,SAAU,CAC9CC,SAAUpI,EAAMkI,YAAYE,SAASC,aAEnCiK,GAAmB,CAAEpT,MAAO2S,KAChCpT,SAEDqV,OAGHpV,EAAAA,EAAAA,KAACoW,EAAAA,GAAM,CACLjQ,KAAMsN,EACN7M,QAASoD,EACTvK,UAAW,CAAE4W,SAAU,CAAEC,WAAW,IACpCC,WAAY,CAAElX,GAAI,CAAEmB,MAAO0S,KAAcnT,SAExCqV,QAIT,CCjRO,SAASoB,GAAUhY,GAA2B,IAA1B,MAAEiY,EAAK,GAAEpX,KAAOO,GAAOpB,EAChD,OACEqB,EAAAA,EAAAA,MAAC6W,GAAU,CAACrX,GAAIA,KAAQO,EAAKG,SAAA,EAC3BC,EAAAA,EAAAA,KAAC2W,GAAS,CAAA5W,SAAE0W,EAAMG,OAElB/W,EAAAA,EAAAA,MAACgX,GAAe,CAAA9W,SAAA,EACdC,EAAAA,EAAAA,KAAC8W,GAAY,CAAA/W,SAAE0W,EAAMM,UAErBlX,EAAAA,EAAAA,MAACmX,GAAa,CAAAjX,SAAA,EACZC,EAAAA,EAAAA,KAACiX,GAAU,CAAAlX,SAAE0W,EAAMnN,QACnBtJ,EAAAA,EAAAA,KAACkX,GAAa,CAAAnX,SAAE0W,EAAMU,kBAKhC,CAIA,MAAMT,IAAazV,EAAAA,EAAAA,IAAO,MAAPA,EAAcI,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC/C0U,UAAW,EACXC,KAAM,QACNvU,QAAS,OACTwH,SAAU,WACVC,UAAW5H,EAAMa,KAAKgH,cAAciO,KACpCrV,aAAyC,EAA3BT,EAAMU,MAAMD,aAC1BE,gBAAiBX,EAAMa,KAAKC,QAAQsG,WAAWyG,MAChD,IAEK2H,IAAe7V,EAAAA,EAAAA,IAAO,MAAPA,EAAc0E,IAAA,IAAC,MAAErE,GAAOqE,EAAA,MAAM,CACjDnE,OAAQ,GACR6V,WAAY,EACZ5V,QAAS,OACTC,WAAY,SACZG,QAASP,EAAMQ,QAAQ,EAAG,EAAG,EAAG,KAChCwV,aAAc,aAAahW,EAAMa,KAAKC,QAAQ+T,UAC/C,IAEKQ,IAAY1V,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC9BQ,QAAS,OACTE,cAAe,aAGXkV,IAAkB5V,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MACpCsW,SAAU,EACV9V,QAAS,OACTuU,KAAM,WACNrU,cAAe,aAGXqV,IAAgB/V,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAClC8U,UAAW,EACXtU,QAAS,OACTuU,KAAM,eAGFiB,IAAahW,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BsW,SAAU,EACV9V,QAAS,OACTuU,KAAM,WACNrU,cAAe,aAGXuV,IAAgBjW,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAClC8U,UAAW,EACXtU,QAAS,OACTE,cAAe,a,wCCxDV,SAAS6V,GAAyBhZ,GAAkC,IAAjC,YAAE2M,EAAW,KAAEhF,EAAI,QAAES,GAASpI,EACtE,OACEqB,EAAAA,EAAAA,MAAC4X,GAAAA,EAAM,CAACnH,WAAS,EAAC7P,SAAS,KAAK0F,KAAMA,EAAMS,QAASA,EAAQ7G,SAAA,EAC3DC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAASjG,EAASvH,GAAI,CAAE4J,SAAU,WAAY6H,MAAO,EAAGhI,IAAK,GAAI/I,UAC3EC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,2BAGhBpF,EAAAA,EAAAA,MAAC6X,GAAAA,EAAa,CAACrY,GAAI,CAAEyN,GAAI,EAAGC,GAAI,EAAGtL,QAAS,QAAS1B,SAAA,EACnDC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CACLpN,IAAKgL,EAAYI,KACjBnL,IAAK+K,EAAYqC,UACjBnO,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIkQ,GAAI,MAGnC7R,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAACzP,QAAS,EAAE/B,SAAA,EAChBC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,UAAUxB,GAAI,CAAE2B,MAAO,gBAAiBjB,SACzDoL,EAAY+I,QAGflU,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,YAAWd,SAAEoL,EAAYI,QAE7C1L,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAEoC,QAAS,OAAQqE,WAAY,UAAW9E,MAAO,iBAAkBjB,SAAA,EAC1EC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CACNC,KAAK,yBACLzE,MAAO,GACPnB,GAAI,CAAEgY,WAAY,EAAG3F,GAAI,GAAK5Q,GAAI,SAEnCqK,EAAYgJ,YAGftU,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAE2N,IAAK,EAAG4E,GAAI,IAAKnQ,QAAS,QAAS1B,SAAA,EAC5CC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CACT+H,KAAK,QACL3W,MAAM,QACN3B,GAAI,CACDiC,IAAK,CACJS,aAAc,EACdkL,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQuK,MAAMiL,YAAa,KACxD,UAAW,CAAE3K,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQuK,MAAMiL,YAAa,SAEvE7X,UAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,wBAG3BjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CACT+H,KAAK,QACL3W,MAAM,OACN3B,GAAI,CACDiC,IAAK,CACJS,aAAc,EACdkL,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQyV,KAAKD,YAAa,KACvD,UAAW,CAAE3K,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQyV,KAAKD,YAAa,SAEtE7X,UAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,kCAG3BjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CACT+H,KAAK,QACL3W,MAAM,UACN3B,GAAI,CACDiC,IAAK,CACJS,aAAc,EACdkL,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQgH,QAAQwO,YAAa,KAC1D,UAAW,CAAE3K,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQgH,QAAQwO,YAAa,SAEzE7X,UAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,6BAG3BjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CACT+H,KAAK,QACL3W,MAAM,YACN3B,GAAI,CACDiC,IAAK,CACJS,aAAc,EACdkL,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQqG,UAAUmP,YAAa,KAC5D,UAAW,CAAE3K,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQqG,UAAUmP,YAAa,SAE3E7X,UAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACxE,MAAO,GAAIyE,KAAK,+CAOvC,CC3FO,SAAS6S,GAAatZ,GAAoB,IAAnB,aAAEqM,GAAcrM,EAC5C,MAAMsL,GAAWiO,EAAAA,EAAAA,KAAW,IAErB/R,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MAEnC8R,GAAa3R,EAAAA,EAAAA,cAAa8E,IAC9BlF,EAAYkF,EAAY,GACvB,IAEG8M,GAAc5R,EAAAA,EAAAA,cAAY,KAC9BJ,EAAY,KAAK,GAChB,IAEGiS,EAAoBrN,EAAa7G,OAwBvC,OACEnE,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACkI,EAAc,CACblC,SAAU8D,EAAS2E,MACnBtG,UAAW+P,EACXrL,QAAS/C,EAASqO,SAASpY,SAE1B,YAAYmY,QAGflY,EAAAA,EAAAA,KAACoY,GAAAA,EAAQ,CAACC,GAAIvO,EAAS2E,MAAM1O,UA/B/BC,EAAAA,EAAAA,KAAAyN,EAAAA,SAAA,CAAA1N,SACG8K,EAAaS,KAAKH,IACjBtL,EAAAA,EAAAA,MAACuI,EAAAA,EAAc,CAAsByE,QAASA,IAAMmL,EAAW7M,GAAapL,SAAA,EAC1EC,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CAACrM,QAASsK,EAAYO,OAAQ0B,aAAa,GAAErN,UACjDC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACpN,IAAKgL,EAAYI,KAAMnL,IAAK+K,EAAYqC,eAGlDxN,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CACXtE,QAAS+B,EAAYI,KACrB9C,UAAW0C,EAAY+I,KACvBzU,UAAW,CACT2J,QAAS,CAAEuE,QAAQ,GACnBlF,UAAW,CAAEkF,QAAQ,EAAMtO,GAAI,CAAEyG,WAAY,aAE/CzG,GAAI,CAAEgQ,GAAI,OAZOlE,EAAYC,UA+BlCpF,IACChG,EAAAA,EAAAA,KAACwX,GAAyB,CAACrM,YAAanF,EAAUG,OAAQH,EAAUY,QAASqR,MAIrF,CCtDO,SAASK,GAAc9Z,GAAmB,IAAlB,YAAE2M,GAAa3M,EAC5C,MAAMsL,GAAWiO,EAAAA,EAAAA,KAAW,GAuC5B,OACElY,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EArCAF,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAAC7P,WAAW,SAASrC,GAAI,CAAEyN,GAAI,GAAI/M,SAAA,EACvCC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CACLpN,IAAgB,OAAXgL,QAAW,IAAXA,OAAW,EAAXA,EAAaI,KAClBnL,IAAgB,OAAX+K,QAAW,IAAXA,OAAW,EAAXA,EAAaqC,UAClBnO,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIsM,GAAI,MAEnC9N,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,YAAWd,SAAa,OAAXoL,QAAW,IAAXA,OAAW,EAAXA,EAAaI,QAC9CvL,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,QAAQxB,GAAI,CAAE2B,MAAO,iBAAkBF,GAAI,IAAMf,SACvD,OAAXoL,QAAW,IAAXA,OAAW,EAAXA,EAAa+I,WAgChBlU,EAAAA,EAAAA,KAACkI,EAAc,CAAClC,SAAU8D,EAAS2E,MAAO5B,QAAS/C,EAASqO,SAASpY,SAAC,iBAItEC,EAAAA,EAAAA,KAACoY,GAAAA,EAAQ,CAACC,GAAIvO,EAAS2E,MAAM1O,UA9B/BC,EAAAA,EAAAA,KAACuR,GAAAA,EAAK,CAACzP,QAAS,EAAGzC,GAAI,CAAE0N,GAAI,EAAGD,GAAI,KAAM/M,SACvC,CACC,CAAEkF,KAAM,yBAA0BwJ,MAAkB,OAAXtD,QAAW,IAAXA,OAAW,EAAXA,EAAagJ,SACtD,CAAElP,KAAM,mBAAoBwJ,MAAkB,OAAXtD,QAAW,IAAXA,OAAW,EAAXA,EAAakJ,aAChD,CAAEpP,KAAM,wBAAyBwJ,MAAkB,OAAXtD,QAAW,IAAXA,OAAW,EAAXA,EAAauE,QACrDpE,KAAKG,IACL5L,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAEFZ,GAAI,CACF2N,IAAK,EACLvL,QAAS,OACTqE,WAAY,QACZyS,UAAW,aACXxY,SAAA,EAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAMwG,EAAKxG,KAAM5F,GAAI,CAAEgY,WAAY,EAAGrW,MAAO,mBACrDyK,EAAKgD,QATDhD,EAAKxG,cA0BpB,C,gBClDO,SAASuT,GAAmBha,GAAmB,IAAlB,YAAEuU,GAAavU,EACjD,MAAMsL,GAAWiO,EAAAA,EAAAA,KAAW,GAEtBU,EAAmB1F,EAAY/O,OA+BrC,OACEnE,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACkI,EAAc,CACblC,SAAU8D,EAAS2E,MACnBtG,UAAWsQ,EACX5L,QAAS/C,EAASqO,SAASpY,SAE1B,gBAAgB0Y,SAGhBA,IACDzY,EAAAA,EAAAA,KAACoY,GAAAA,EAAQ,CAACC,GAAIvO,EAAS2E,MAAM1O,UAC3BC,EAAAA,EAAAA,KAACuR,GAAAA,EAAK,CAACzP,QAAS,EAAGzC,GAAI,CAAE+P,EAAG,GAAIrP,SAxCtCgT,EAAYzH,KAAI,CAACoN,EAAYhU,KAC3B7E,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAA+BZ,GAAI,CAAE2N,IAAK,IAAKvL,QAAS,OAAQC,WAAY,UAAW3B,SAAA,EACzFC,EAAAA,EAAAA,KAAC2Y,GAAAA,GAAa,CACZC,WAAS,EACTC,KAAMH,EAAWI,QACjBC,WAAYA,IAAMnM,QAAQiL,KAAK,YAC/BpY,UAAW,CAAEwF,KAAM,CAAE5F,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,MAC9CnC,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIyL,QAAS,yBAGxCjN,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CACXtE,QAASsP,EAAWnN,KACpB9C,WAAWuQ,EAAAA,EAAAA,IAAUN,EAAW5M,WAChCrM,UAAW,CACT2J,QAAS,CAAEuE,QAAQ,EAAMtO,GAAI,CAAEyG,WAAY,UAC3C2C,UAAW,CACTkF,QAAQ,EACRtO,GAAI,CACFyB,GAAI,IACJgF,WAAY,UACZ9E,MAAO,uBAnBP0X,EAAWnN,KAAO7G,WA8ClC,CCxDA,MAAMwO,GAAY,IAEZ+F,GAAmB,IAElB,SAASC,GAAQ1a,GAAkE,IAAjE,YAAE+U,EAAW,aAAE1I,EAAY,SAAEI,EAAQ,QAAEoI,EAAO,GAAEhU,KAAOO,GAAOpB,EACrF,MAAM,gBAAEoV,EAAe,WAAEH,EAAU,cAAEzJ,GAAkBuJ,EAEjDX,EAAU/H,EAAa7G,OAAS,EAEhC+O,EAAc9H,EAASK,KAAK6N,GAAQA,EAAIpG,cAAaqG,KAAK,IAAM,GAEhEhE,EAAgBA,IACpB/B,GACErT,EAAAA,EAAAA,KAAC2R,GAAgB,KAEjB3R,EAAAA,EAAAA,KAAC4V,EAAAA,EAAS,CAAA7V,UACRF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACG6S,GACC5S,EAAAA,EAAAA,KAAC8X,GAAa,CAACjN,aAAcA,KAE7B7K,EAAAA,EAAAA,KAACsY,GAAc,CAACnN,YAAaN,EAAa,MAG5C7K,EAAAA,EAAAA,KAACwY,GAAmB,CAACzF,YAAaA,SAK1C,OACElT,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFZ,GAAI,CACDiC,IAAK,CACJyU,UAAW,EACXC,KAAM,WACNxV,MAAO0S,GACPvR,cAAe,SACfF,QAAS,CAAEwU,GAAI,OAAQoD,GAAI,QAC3BC,WAAY,aAAahY,EAAMa,KAAKC,QAAQ+T,UAC5C5M,WAAYjI,EAAMkI,YAAYC,OAAO,CAAC,SAAU,CAC9CC,SAAUpI,EAAMkI,YAAYE,SAASC,aAEnCiK,GAAmB,CAAEpT,MAAO,QAE9BE,MAAMC,QAAQtB,GAAMA,EAAK,CAACA,OAE5BO,EAAKG,UAEP6T,GAAmBwB,OAGvBpV,EAAAA,EAAAA,KAACoW,EAAAA,GAAM,CACLmD,OAAO,QACPpT,KAAMsN,EACN7M,QAASoD,EACTvK,UAAW,CAAE4W,SAAU,CAAEC,WAAW,IACpCC,WAAY,CAAElX,GAAI,CAAEmB,MAAOyY,KAAqBlZ,SAE/CqV,QAIT,C,4BC1DO,SAASoE,GAAehb,GAA6C,IAA5C,QAAEiU,EAAO,aAAE5H,EAAY,eAAE4O,GAAgBjb,EACvE,MAAM,KAAEyL,IAASC,EAAAA,EAAAA,MAEX,GAAEyI,EAAE,cAAE+G,EAAa,SAAEC,GCjBtB,SAAmBnb,GAA4C,IAADob,EAAAC,EAAA,IAA1C,QAAEpH,EAAO,aAAE5H,EAAY,cAAEG,GAAexM,EACjE,MAAMsb,EAASjP,EAAasK,MAAMhK,GAAgBA,EAAYC,KAAOqH,EAAQ9G,WAEvEoO,EAAgBtH,EAAQ9G,WAAaX,EAErC0O,EAAgBK,EAClB,CAAErT,KAAM,MACR,CAAE8G,UAAiB,OAANsM,QAAM,IAANA,OAAM,EAANA,EAAQtM,UAAWwM,UAAsC,QAA7BJ,EAAQ,OAANE,QAAM,IAANA,GAAY,QAAND,EAANC,EAAQvO,YAAI,IAAAsO,OAAN,EAANA,EAAcI,MAAM,KAAK,UAAE,IAAAL,EAAAA,EAAI,WAI9E,MAAO,CAAED,SAFgC,UAAxBlH,EAAQ7G,YAEN+G,GAAIoH,EAAeL,gBACxC,CDK0CQ,CAAW,CACjDzH,UACA5H,eACAG,cAAe,GAAO,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,QAGpB,UAAE4O,EAAS,UAAExM,GAAckM,GAE3B,KAAE7N,EAAI,UAAEC,GAAc2G,EA+E5B,OAAKA,EAAQ5G,MAKXhM,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAEyO,GAAI,EAAGrM,QAAS,OAAQG,eAAgB+Q,EAAK,WAAa,SAAU5S,SAAA,EAC3E4S,IAAM3S,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACpN,IAAK6Z,EAAW5Z,IAAKoN,EAAWnO,GAAI,CAAEmB,MAAO,GAAIgB,OAAQ,GAAIkQ,GAAI,MAEjF7R,EAAAA,EAAAA,MAAC0R,GAAAA,EAAK,CAAC7P,WAAYiR,EAAK,WAAa,aAAa5S,SAAA,EApFpDF,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CACT+M,QAAM,EACN9M,QAAQ,UACRxB,GAAI,CAAEyO,GAAI,EAAG9M,MAAO,oBAAsB2R,GAAM,CAAEjB,GAAI,SAAY3R,SAAA,EAEhE4S,GAAM,GAAGqH,OAEVhM,EAAAA,EAAAA,IAAOlC,OAgFNjM,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACFZ,GAAI,CACFoC,QAAS,OACTC,WAAY,SACZuH,SAAU,WACV,UAAW,CAAE,qBAAsB,CAAEkR,QAAS,KAC9Cpa,SAAA,EAjFRC,EAAAA,EAAAA,KAACuR,GAAAA,EAAK,CACJlS,GAAI,CACF+P,EAAG,IACHmI,SAAU,GACV9W,SAAU,IACVsB,aAAc,EACd+D,WAAY,QACZmH,QAAS,wBACL0F,GAAM,CAAE3R,MAAO,WAAYiM,QAAS,sBACpC0M,GAAY,CAAEvK,EAAG,EAAGnC,QAAS,gBACjClN,SAED4Z,GACC3Z,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAU,MACVC,IAAI,aACJC,IAAKyL,EACLgB,QAASA,IAAM4M,EAAe5N,GAC9BxM,GAAI,CACFmB,MAAO,IACPgB,OAAQ,OACRO,aAAc,IACd+M,OAAQ,UACRsL,UAAW,QACXC,YAAa,QACb,UAAW,CAAEF,QAAS,OAI1BtO,KAMJhM,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CACF6D,UAAU,kBACVzE,GAAKiC,IAAK,CACRsQ,GAAI,GACJ7I,KAAM,EACNoR,QAAS,EACTrR,IAAK,OACLrH,QAAS,OACTwH,SAAU,WACVM,WAAYjI,EAAMkI,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAUpI,EAAMkI,YAAYE,SAASC,aAEnCgJ,GAAM,CAAE7B,MAAO,EAAG/H,KAAM,WAC3BhJ,SAAA,EAEHC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC+H,KAAK,QAAO5X,UACtBC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,mBAAmBzE,MAAO,QAG1CR,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC+H,KAAK,QAAO5X,UACtBC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,wBAAwBzE,MAAO,QAG/CR,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC+H,KAAK,QAAO5X,UACtBC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,6BAA6BzE,MAAO,mBAM/C,IAwBX,CExHO,SAAS8Z,GAAe9b,GAA4C,IAA3C,SAAEyM,EAAW,GAAE,aAAEJ,EAAY,QAAEwI,GAAS7U,EACtE,MAAM,eAAE+b,GCRH,SAA2BtP,GAChC,MAAMsP,GAAiBC,EAAAA,EAAAA,QAAO,MAExBC,GAAiBpU,EAAAA,EAAAA,cAAY,KAC5B4E,GAIAsP,EAAeG,SAIhBH,EAAeG,UACjBH,EAAeG,QAAQC,UAAYJ,EAAeG,QAAQE,aAC5D,GACC,CAAC3P,IAMJ,OAJAqJ,EAAAA,EAAAA,YAAU,KACRmG,GAAgB,GACf,CAACxP,IAEG,CAAEsP,iBACX,CDd6BM,CAAkB5P,GAEvCtH,EAASsH,EACZ5H,QAAQoP,GAAoC,UAAxBA,EAAQ7G,cAC5BN,KAAKmH,IAAO,CAAQrS,IAAKqS,EAAQ5G,SAE9BiP,GAAW/U,EAAAA,GAAAA,GAAYpC,GAE7B,OAAI0P,GAEArT,EAAAA,EAAAA,KAACuR,GAAAA,EAAK,CAAClS,GAAI,CAAE2W,KAAM,WAAY/M,SAAU,YAAalJ,UACpDC,EAAAA,EAAAA,KAAC+a,GAAAA,EAAc,CACb/Z,MAAM,UACN3B,GAAI,CACFyJ,IAAK,EACLC,KAAM,EACNvI,MAAO,EACPgB,OAAQ,EACRO,aAAc,EACdkH,SAAU,iBAQlBpJ,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAAC4V,EAAAA,EAAS,CACRoF,IAAKT,EACLlb,GAAI,CACF0N,GAAI,EACJ6E,GAAI,EACJyD,GAAI,EACJW,KAAM,YACNjW,SAEDkL,EAASK,KAAKmH,IACbzS,EAAAA,EAAAA,KAACwZ,GAAe,CAEd/G,QAASA,EACT5H,aAAcA,EACd4O,eAAgBA,IAAMqB,EAAS1U,OAAOqM,EAAQ5G,OAHzC4G,EAAQrH,SAQnBpL,EAAAA,EAAAA,KAAC0D,GAAAA,EAAQ,CACPC,OAAQA,EACRwC,KAAM2U,EAAS3U,KACf8U,MAAOH,EAASlU,QAChBlC,MAAOoW,EAAS9U,aAIxB,CE9CO,SAASkV,GAAgB1c,GAK5B,IAL6B,SAC/B2J,EAAQ,WACRuK,EAAU,gBACVyI,EAAe,uBACf3H,GACDhV,EACC,MAAM2L,GAASC,EAAAA,EAAAA,OAET,KAAEH,IAASC,EAAAA,EAAAA,KAEXkR,GAAUZ,EAAAA,EAAAA,QAAO,OAEhB/H,EAAS4I,IAAcnV,EAAAA,EAAAA,UAAS,IAEjC8N,GAAYC,EAAAA,EAAAA,UAChB,MACE7I,GAAI,GAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,KACb8I,KAAM,GAAO,OAAJjK,QAAI,IAAJA,OAAI,EAAJA,EAAMiK,OACfxE,MAAO,GAAO,OAAJzF,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,QAChByE,QAAS,GAAO,OAAJlK,QAAI,IAAJA,OAAI,EAAJA,EAAMkK,UAClB5I,KAAM,GAAO,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMU,cACfG,cAAcsJ,EAAAA,EAAAA,MACd5G,UAAW,GAAO,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,WACpBwF,YAAa,GAAO,OAAJpK,QAAI,IAAJA,OAAI,EAAJA,EAAMoK,cACtB3I,OAAQ,YAEV,CAACzB,KAGG,YAAE4I,EAAW,iBAAEtL,GAAqBgL,GAAoB,CAC5DE,UACAC,aACAC,GAAIqB,IAGAsH,GAAejV,EAAAA,EAAAA,cAAY,KAC3B+U,EAAQV,SACVU,EAAQV,QAAQa,OAClB,GACC,IAEGC,GAAsBnV,EAAAA,EAAAA,cAAakI,IACvC8M,EAAW9M,EAAMC,OAAOC,MAAM,GAC7B,IAEGgN,GAAoBpV,EAAAA,EAAAA,cACxBgB,UACE,GAAkB,UAAdkH,EAAMmN,KAAoBjJ,EAE9B,IACE,GAAIe,QnBgBLnM,eAA2B6E,EAAgB2G,GAChD,MAAM8I,EAAmB,CAAC7U,EAAgB,CAAEW,OAAQ,CAAEC,SAAU,mBAE1DkU,EAAkB,CACtB9U,EACA,CAAEW,OAAQ,CAAEyE,iBAAgBxE,SAAU,kBAMxC,GAAIb,EAAc,CAChB,MAAMc,EAAO,CAAEuE,iBAAgB2G,qBACzBhL,EAAAA,GAAMgU,IAAI/U,EAAgBa,EAClC,EAKAI,EAAAA,EAAAA,GACE6T,GACC5T,IACC,MAAM8T,EAAsB9T,EAAY+B,aAElCA,EAAe,IAChB+R,EACH7Q,SAAU,IAAI6Q,EAAoB7Q,SAAU4H,IAG9C,MAAO,IAAK7K,EAAa+B,eAAc,IAEzC,IAGFhC,EAAAA,EAAAA,GACE4T,GACC3T,IACC,MAEMC,EAFuBD,EAAYC,cAEEqD,KAAKvB,GAC9CA,EAAaqB,KAAOc,EAChB,IAAKnC,EAAckB,SAAU,IAAIlB,EAAakB,SAAU4H,IACxD9I,IAGN,MAAO,IAAK/B,EAAaC,gBAAe,IAE1C,EAEJ,CmB/DgB8T,CAAYvI,EAAwBX,OACrC,CAEL,MAAMjL,QAAYN,EAAmBC,GACrC4C,EAAOuC,KAAK,GAAGH,EAAAA,EAAMC,UAAUxF,WAAWY,EAAImC,aAAaqB,MAE3D+P,EAAgB,GAClB,CACF,CAAE,MAAOxO,GACPC,QAAQD,MAAMA,EAChB,CAAC,QACC0O,EAAW,GACb,IAEF,CAAC9T,EAAkBkL,EAASI,EAAasI,EAAiBhR,EAAQqJ,IAGpE,OACE3T,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAAC2Q,EAAAA,GAAS,CACRpF,KAAK,eACLH,GAAG,qBACHqD,MAAOgE,EACPuJ,QAASP,EACThL,SAAU+K,EACV/F,YAAY,iBACZtN,SAAUA,EACVuN,gBACE1V,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAA7P,UACTC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,4BAGlBgX,cACEpc,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAEgY,WAAY,EAAG5V,QAAS,QAAS1B,SAAA,EAC1CC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAASyO,EAAavb,UAChCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,8BAEhBjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAASyO,EAAavb,UAChCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,yBAEhBjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAA7P,UACTC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,+BAIpB5F,GAAI,CACDiC,IAAK,CACJyL,GAAI,EACJvL,OAAQ,GACR6V,WAAY,EACZ6E,UAAW,aAAa5a,EAAMa,KAAKC,QAAQ+T,gBAKjDnW,EAAAA,EAAAA,KAAA,SAAO0G,KAAK,OAAOsU,IAAKI,EAASe,MAAO,CAAE1a,QAAS,YAGzD,C,gBC3GO,SAAS2a,GAAgB5d,GAA0C,IAAzC,YAAE+U,EAAW,aAAE1I,EAAY,QAAEwI,GAAS7U,EACrE,MAAM8C,GAAQ+I,EAAAA,EAAAA,KACRgS,GAAO9R,EAAAA,EAAAA,GAAcjJ,EAAMkJ,YAAYC,GAAG,OAE1C0D,GAAcC,EAAAA,EAAAA,MAEdwE,EAAU/H,EAAa7G,OAAS,EAEhCgI,EAAoBnB,EAAa,IAEjC,gBAAE+I,EAAe,kBAAEC,EAAiB,aAAEH,GAAiBH,EAEvDgB,GAAkBlO,EAAAA,EAAAA,cAAY,KAC9BgW,EACFxI,IAEAH,GACF,GACC,CAAC2I,IA2BJ,GAAIhJ,EACF,OAAOrT,EAAAA,EAAAA,KAACwR,GAAkB,IAmC5B,OACE3R,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,CACG6S,GA9DH5S,EAAAA,EAAAA,KAACqN,EAAAA,EAAW,CAACiP,IAAK,EAAGjd,GAAI,CAAE,CAAC,MAAMkd,GAAAA,EAAmBC,UAAW,CAAEhc,MAAO,GAAIgB,OAAQ,KAAOzB,SACzF8K,EAAaS,KAAKH,IACjBnL,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAAsBpN,IAAKgL,EAAYI,KAAMnL,IAAK+K,EAAYqC,WAAxDrC,EAAYC,SAM7BvL,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAE2N,IAAK,EAAGvL,QAAS,OAAQC,WAAY,UAAW3B,SAAA,EACzDC,EAAAA,EAAAA,KAACkN,EAAAA,EAAK,CAACrM,QAA0B,OAAjBmL,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBN,OAAQ0B,aAAa,GAAErN,UACxDC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACnN,IAAsB,OAAjB4L,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBwB,UAAWrN,IAAsB,OAAjB6L,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBT,UAGrEvL,EAAAA,EAAAA,KAAC0N,EAAAA,EAAY,CACXtE,QAA0B,OAAjB4C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBT,KAC5B9C,UACgC,aAAb,OAAjBuD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBN,SACfsC,EAAAA,EAAAA,IAAwB,OAAjBhC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBlB,cACT,OAAjBkB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBN,aA8C3B7L,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAACZ,GAAI,CAAEkC,SAAU,EAAGE,QAAS,OAAQG,eAAgB,YAAa7B,SAAA,EACpEC,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAA7P,UACTC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,wBAGhBjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAA7P,UACTC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,qCAGhBjF,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAAS0H,EAAgBxU,UACnCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAO2O,EAA6C,uBAA3B,8BAGpC5T,EAAAA,EAAAA,KAAC4P,EAAAA,EAAU,CAAC/C,QAASsB,EAAY/H,OAAOrG,UACtCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,iCAjDpBjF,EAAAA,EAAAA,KAACiP,EAAAA,EAAa,CACZ9I,KAAMgI,EAAYhI,KAClB+I,SAAUf,EAAYe,SACtBtI,QAASuH,EAAYvH,QAAQ7G,UAE7BF,EAAAA,EAAAA,MAACkQ,EAAAA,EAAQ,CAAAhQ,SAAA,EACPF,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAACpD,QAASA,IAAMsB,EAAYvH,UAAU7G,SAAA,EAC7CC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,wBAAwB,yBAIxCpF,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAACpD,QAASA,IAAMsB,EAAYvH,UAAU7G,SAAA,EAC7CC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,gCAAgC,YAIhDpF,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAACpD,QAASA,IAAMsB,EAAYvH,UAAU7G,SAAA,EAC7CC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,+BAA+B,aAI/CjF,EAAAA,EAAAA,KAAC6P,EAAAA,EAAO,CAACxQ,GAAI,CAAEyQ,YAAa,aAE5BjQ,EAAAA,EAAAA,MAACoQ,EAAAA,EAAQ,CAACpD,QAASA,IAAMsB,EAAYvH,UAAWvH,GAAI,CAAE2B,MAAO,cAAejB,SAAA,EAC1EC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,+BAA+B,mBAgCvD,C,2BCnHO,SAASwX,GAAiBje,GAAiC,IAAhC,SAAE8U,EAAQ,gBAAE6H,GAAiB3c,EAC7D,MAAOke,EAAkBC,IAAuBzW,EAAAA,EAAAA,UAAS,IAEnD0W,GAAsBvW,EAAAA,EAAAA,cACzBL,IACC2W,EAAoB,IACpBxB,EAAgBnV,EAAS,GAE3B,CAACmV,IAGH,OACEtb,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,YAAYxB,GAAI,CAAE2B,MAAO,eAAgB0Q,GAAI,GAAI3R,SAAC,SAItEC,EAAAA,EAAAA,KAAC6c,GAAAA,EAAY,CACXxd,GAAI,CAAEkY,SAAU,CAAEzB,GAAI,KAAOvU,SAAU,CAAE0U,GAAI,EAAGH,GAAI,UACpDgH,UAAQ,EACRC,UAAW,EACXC,UAAW,KACXC,aAAc,GACdC,sBAAoB,EACpBC,eAAend,EAAAA,EAAAA,KAACqS,GAAAA,EAAc,CAACL,MAAO0K,IACtCjM,SAAUA,CAAClC,EAAO6O,IAAaR,EAAoBQ,GACnDC,cAAeA,CAAC9O,EAAO6O,IAAaT,EAAoBS,GACxDE,QAAShK,EACTiK,eAAiBrI,GAAcA,EAAU3J,KACzCiS,qBAAsBA,CAACvM,EAAQxC,IAAUwC,EAAO7F,KAAOqD,EAAMrD,GAC7DqS,YAAchW,IAAWzH,EAAAA,EAAAA,KAACwV,EAAAA,EAAS,IAAK/N,EAAQgO,YAAY,iBAC5DiI,aAAcA,CAACC,EAAOzI,EAAS7T,KAAA,IAAE,SAAE2E,GAAU3E,EAAA,OAC3Cuc,EAAAA,EAAAA,eAAA,SAAQD,EAAOjC,IAAKxG,EAAU9J,KAC5BvL,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAEFZ,GAAI,CACFqS,GAAI,EACJlR,MAAO,GACPgB,OAAQ,GACRqc,SAAU,SACV9b,aAAc,MACdkH,SAAU,YACVlJ,SAAA,EAEFC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACpN,IAAK+U,EAAU3J,KAAMnL,IAAK8U,EAAU1H,UAAWnO,GAAI,CAAEmB,MAAO,EAAGgB,OAAQ,MAC/ExB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFZ,GAAI,CACDiC,IAAK,CACJwH,IAAK,EACLC,KAAM,EACNvI,MAAO,EACPgB,OAAQ,EACR2Y,QAAS,EACT1Y,QAAS,OACTwH,SAAU,WACVvH,WAAY,SACZE,eAAgB,SAChBqL,SAAS/K,EAAAA,GAAAA,IAASZ,EAAMa,KAAKC,QAAQC,KAAK,cAAe,IACzDkH,WAAYjI,EAAMkI,YAAYC,OAAO,CAAC,WAAY,CAChDqU,OAAQxc,EAAMkI,YAAYsU,OAAOC,UACjCrU,SAAUpI,EAAMkI,YAAYE,SAASC,aAEnC3D,GAAY,CAAEmU,QAAS,EAAGnZ,MAAO,mBAEvCjB,UAEFC,EAAAA,EAAAA,KAACgF,EAAAA,EAAO,CAACC,KAAK,2BAhCXiQ,EAAU9J,IAoChB8J,EAAU3J,KACR,EAEPyS,WAAYA,CAAChY,EAAUiY,IACrBjY,EAASsF,KAAI,CAAC4J,EAAWxQ,KACvBkZ,EAAAA,EAAAA,eAACM,GAAAA,EAAI,IACCD,EAAY,CAAEvZ,UAClBgX,IAAKxG,EAAU9J,GACf+S,MAAOjJ,EAAU3J,KACjBiR,QAAQxc,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAACpN,IAAK+U,EAAU3J,KAAMnL,IAAK8U,EAAU1H,YACpDmK,KAAK,QACL9W,QAAQ,eAOtB,CCnGO,SAASud,KACd,MAAO3K,EAAY4K,IAAiBnY,EAAAA,EAAAA,WAAS,IAEtC0N,EAAiB0K,IAAsBpY,EAAAA,EAAAA,WAAS,GAEjD2N,GAAoBxN,EAAAA,EAAAA,cAAY,KACpCiY,GAAoBC,IAAUA,GAAK,GAClC,IAcH,MAAO,CACL3K,kBACAD,gBAdqBtN,EAAAA,EAAAA,cAAY,KACjCiY,GAAmB,EAAM,GACxB,IAaDzK,oBAEAJ,aACAC,cAdmBrN,EAAAA,EAAAA,cAAY,KAC/BgY,GAAc,EAAK,GAClB,IAaDrU,eAXoB3D,EAAAA,EAAAA,cAAY,KAChCgY,GAAc,EAAM,GACnB,IAWL,CCRO,SAASG,KAAY,IAADC,EAAAC,EACzB,MAAMvU,GAASC,EAAAA,EAAAA,OAET,KAAEH,IAASC,EAAAA,EAAAA,MAEX,SAAEoJ,GvBXH,WACL,MAAM9L,EAAM,CAACV,EAAgB,CAAEW,OAAQ,CAAEC,SAAU,eAE7C,KAAEC,EAAI,UAAEgX,EAAS,MAAEhS,EAAK,aAAEiS,IAAiBC,EAAAA,EAAAA,IAAOrX,EAAKsX,EAAAA,GAAS7X,GAatE,OAXsBgN,EAAAA,EAAAA,UACpB,MACEX,UAAc,OAAJ3L,QAAI,IAAJA,OAAI,EAAJA,EAAM2L,WAAY,GAC5ByL,gBAAiBJ,EACjBK,cAAerS,EACfsS,mBAAoBL,EACpBM,eAAgBP,IAAcC,KAAqB,OAAJjX,QAAI,IAAJA,GAAAA,EAAM2L,SAAStP,WAEhE,CAAK,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAM2L,SAAU3G,EAAOgS,EAAWC,GAIvC,CuBNuBO,GAGf3L,GADe4L,EAAAA,EAAAA,MACuBjT,IAAI,OAAS,IAEnD,cAAElE,EAAa,qBAAEoX,GvBKlB,WACL,MAAM7X,EAAM,CAACV,EAAgB,CAAEW,OAAQ,CAAEC,SAAU,oBAE7C,KAAEC,EAAI,UAAEgX,EAAS,MAAEhS,EAAK,aAAEiS,IAAiBC,EAAAA,EAAAA,IAAOrX,EAAKsX,EAAAA,GAAS7X,GAetE,OAbsBgN,EAAAA,EAAAA,UAAQ,KAC5B,MAAM4B,EAAW,OAAJlO,QAAI,IAAJA,GAAAA,EAAMM,cAAcjE,QAASsb,EAAAA,EAAAA,GAAM3X,EAAKM,eAAgBgJ,GAAWA,EAAO7F,KAAM,CAAC,EACxF6J,EAASsK,OAAOC,KAAK3J,GAE3B,MAAO,CACL5N,cAAe,CAAE4N,OAAMZ,UACvBoK,qBAAsBV,EACtBc,mBAAoB9S,EACpB+S,wBAAyBd,EACzBe,oBAAqBhB,IAAcC,IAAiB3J,EAAOjR,OAC5D,GACA,CAAK,OAAJ2D,QAAI,IAAJA,OAAI,EAAJA,EAAMM,cAAe0E,EAAOgS,EAAWC,GAG7C,CuBxBkDgB,IAC1C,aAAE7V,EAAY,kBAAE8V,EAAiB,oBAAEC,GvB2BpC,SAA4B5T,GACjC,MAAM1E,EAAM0E,EACR,CAACpF,EAAgB,CAAEW,OAAQ,CAAEyE,iBAAgBxE,SAAU,kBACvD,IAEE,KAAEC,EAAI,UAAEgX,EAAS,MAAEhS,EAAK,aAAEiS,IAAiBC,EAAAA,EAAAA,IAAOrX,EAAKsX,EAAAA,GAAS7X,GAatE,OAXsBgN,EAAAA,EAAAA,UACpB,MACElK,aAAkB,OAAJpC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,aACpB+V,oBAAqBnB,EACrBkB,kBAAmBlT,EACnBoT,uBAAwBnB,EACxBoB,mBAAoBrB,IAAcC,KAAqB,OAAJjX,QAAI,IAAJA,GAAAA,EAAMoC,iBAE3D,CAAK,OAAJpC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,aAAc4C,EAAOgS,EAAWC,GAI3C,CuB7CIqB,CAAmBzM,GAEf0M,EAAU9B,KACV+B,EAAmB/B,MAElB1L,EAAY0N,IAAiBla,EAAAA,EAAAA,UAAS,KAE7CoO,EAAAA,EAAAA,YAAU,KACHd,IACH/G,EAAAA,EAAAA,kBAAgB,KACdtC,EAAOuC,KAAKH,EAAAA,EAAMC,UAAUxF,KAAK,GAErC,GACC,CAAC6Y,EAAmB1V,EAAQqJ,IAE/B,MAAMoJ,GAAsBvW,EAAAA,EAAAA,cAAaL,IACvCoa,EAAcpa,EAAS,GACtB,IAEGqa,EAAuBtW,EACzBA,EAAac,aAAaxH,QAAQ8H,GAAgBA,EAAYC,KAAO,GAAO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,OAC9E,GAEEkV,EAAkB9M,GAA0BzJ,EAElD,OACElK,EAAAA,EAAAA,MAAC0gB,EAAAA,GAAgB,CACf9f,UAAU,EACVpB,GAAI,CAAEoC,QAAS,OAAQuU,KAAM,WAAYrU,cAAe,UAAW5B,SAAA,EAEnEC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,KAAKxB,GAAI,CAAEyO,GAAI,CAAEmI,GAAI,EAAGH,GAAI,IAAM/V,SAAC,UAIvDC,EAAAA,EAAAA,KAACwW,GAAU,CACTC,MAAO,CACLM,OAAQuJ,GACNtgB,EAAAA,EAAAA,KAACoc,GAAgB,CACf7I,YAAa2M,EACbrV,aAAcwV,EACdhN,QAASyM,KAGX9f,EAAAA,EAAAA,KAACyc,GAAiB,CAACnJ,SAAUA,EAAU6H,gBAAiByB,IAE1DhG,KACE5W,EAAAA,EAAAA,KAACoT,GAAO,CACNE,SAAUA,EACVrL,cAAeA,EACfuL,uBAAwBA,EACxBD,YAAa4M,EACb9M,QAASgM,IAGb/V,MACEzJ,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,CACGyT,EACCqM,GACE7f,EAAAA,EAAAA,KAACzB,EAAAA,EAAY,CACXoB,MAAOkgB,EAAkBpN,QACzBnT,OAAQ,GAAGe,EAAAA,EAAOC,oDAGpBN,EAAAA,EAAAA,KAACsa,GAAe,CACdrP,SAAgC,QAAxBwT,EAAc,OAAZ1U,QAAY,IAAZA,OAAY,EAAZA,EAAckB,gBAAQ,IAAAwT,EAAAA,EAAI,GACpC5T,aAAcwV,EACdhN,QAASyM,KAIb9f,EAAAA,EAAAA,KAACzB,EAAAA,EAAY,CACXoB,MAAM,gBACND,YAAY,6BACZJ,OAAQ,GAAGe,EAAAA,EAAOC,qDAItBN,EAAAA,EAAAA,KAACkb,GAAgB,CACfxI,WAAYA,EACZyI,gBAAiByB,EACjBpJ,uBAAwBA,EACxBrL,UAAWuK,EAAW1O,SAAWwP,OAIvC2D,QAASmJ,IACPtgB,EAAAA,EAAAA,KAACkZ,GAAQ,CACP3F,YAAa2M,EACbrV,aAAcwV,EACdhN,QAASyM,EACT7U,SAAgC,QAAxByT,EAAc,OAAZ3U,QAAY,IAAZA,OAAY,EAAZA,EAAckB,gBAAQ,IAAAyT,EAAAA,EAAI,UAOlD,CC/HA,MAAM8B,GAAW,CAAE7gB,MAAO,sBAAsBU,EAAAA,EAAOogB,WAExC,SAASC,KACtB,OACE7gB,EAAAA,EAAAA,MAAA4N,EAAAA,SAAA,CAAA1N,SAAA,EACEC,EAAAA,EAAAA,KAAC2gB,EAAAA,GAAM,CAAA5gB,UACLF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,IAAEygB,GAAS7gB,YAGpBK,EAAAA,EAAAA,KAACwe,GAAQ,MAGf,C","sources":["components/empty-content/empty-content.jsx","components/lightbox/utils.js","components/lightbox/classes.js","components/lightbox/lightbox.jsx","components/lightbox/use-light-box.js","actions/chat.js","sections/chat/styles.jsx","sections/chat/chat-nav-item.jsx","sections/chat/utils/get-nav-item.js","sections/chat/chat-nav-account.jsx","sections/chat/chat-skeleton.jsx","sections/chat/chat-nav-search-results.jsx","sections/chat/utils/initial-conversation.js","sections/chat/chat-nav.jsx","sections/chat/layout.jsx","sections/chat/chat-room-participant-dialog.jsx","sections/chat/chat-room-group.jsx","sections/chat/chat-room-single.jsx","sections/chat/chat-room-attachments.jsx","sections/chat/chat-room.jsx","sections/chat/chat-message-item.jsx","sections/chat/utils/get-message.js","sections/chat/chat-message-list.jsx","sections/chat/hooks/use-messages-scroll.js","sections/chat/chat-message-input.jsx","sections/chat/chat-header-detail.jsx","sections/chat/chat-header-compose.jsx","sections/chat/hooks/use-collapse-nav.js","sections/chat/view/chat-view.jsx","pages/dashboard/chat/index.jsx"],"sourcesContent":["import { varAlpha } from 'minimal-shared/utils';\n\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\nimport { CONFIG } from 'src/global-config';\n\n// ----------------------------------------------------------------------\n\nexport function EmptyContent({\n  sx,\n  imgUrl,\n  action,\n  filled,\n  slotProps,\n  description,\n  title = 'No data',\n  ...other\n}) {\n  return (\n    <ContentRoot filled={filled} sx={sx} {...other}>\n      <Box\n        component=\"img\"\n        alt=\"Empty content\"\n        src={imgUrl ?? `${CONFIG.assetsDir}/assets/icons/empty/ic-content.svg`}\n        {...slotProps?.img}\n        sx={[\n          {\n            width: 1,\n            maxWidth: 160,\n          },\n          ...(Array.isArray(slotProps?.img?.sx)\n            ? (slotProps?.img?.sx ?? [])\n            : [slotProps?.img?.sx]),\n        ]}\n      />\n\n      {title && (\n        <Typography\n          variant=\"h6\"\n          {...slotProps?.title}\n          sx={[\n            {\n              mt: 1,\n              textAlign: 'center',\n              color: 'text.disabled',\n            },\n            ...(Array.isArray(slotProps?.title?.sx)\n              ? (slotProps?.title?.sx ?? [])\n              : [slotProps?.title?.sx]),\n          ]}\n        >\n          {title}\n        </Typography>\n      )}\n\n      {description && (\n        <Typography\n          variant=\"body2\"\n          {...slotProps?.description}\n          sx={[\n            {\n              mt: 1,\n              textAlign: 'center',\n              color: 'text.disabled',\n            },\n            ...(Array.isArray(slotProps?.description?.sx)\n              ? (slotProps?.description?.sx ?? [])\n              : [slotProps?.description?.sx]),\n          ]}\n        >\n          {description}\n        </Typography>\n      )}\n\n      {action && action}\n    </ContentRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst ContentRoot = styled('div', {\n  shouldForwardProp: (prop) => !['filled', 'sx'].includes(prop),\n})(({ filled, theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(0, 3),\n  ...(filled && {\n    borderRadius: theme.shape.borderRadius * 2,\n    backgroundColor: varAlpha(theme.vars.palette.grey['500Channel'], 0.04),\n    border: `dashed 1px ${varAlpha(theme.vars.palette.grey['500Channel'], 0.08)}`,\n  }),\n}));\n","import Zoom from 'yet-another-react-lightbox/plugins/zoom';\nimport Video from 'yet-another-react-lightbox/plugins/video';\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\n\n// ----------------------------------------------------------------------\n\nexport function getPlugins({\n  disableZoom,\n  disableVideo,\n  disableCaptions,\n  disableSlideshow,\n  disableThumbnails,\n  disableFullscreen,\n}) {\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\n\n  if (disableThumbnails) {\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\n  }\n  if (disableCaptions) {\n    plugins = plugins.filter((plugin) => plugin !== Captions);\n  }\n  if (disableFullscreen) {\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\n  }\n  if (disableSlideshow) {\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\n  }\n  if (disableZoom) {\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\n  }\n  if (disableVideo) {\n    plugins = plugins.filter((plugin) => plugin !== Video);\n  }\n\n  return plugins;\n}\n","import { createClasses } from 'src/theme/create-classes';\n\n// ----------------------------------------------------------------------\n\nexport const lightboxClasses = {\n  root: createClasses('lightbox__root'),\n};\n","import { mergeClasses } from 'minimal-shared/utils';\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\n\nimport Box from '@mui/material/Box';\n\nimport { Iconify } from '../iconify';\nimport { getPlugins } from './utils';\nimport { lightboxClasses } from './classes';\n\n// ----------------------------------------------------------------------\n\nexport function Lightbox({\n  slides,\n  disableZoom,\n  disableVideo,\n  disableTotal,\n  disableCaptions,\n  disableSlideshow,\n  disableThumbnails,\n  disableFullscreen,\n  onGetCurrentIndex,\n  className,\n  ...other\n}) {\n  const totalItems = slides ? slides.length : 0;\n\n  return (\n    <ReactLightbox\n      slides={slides}\n      animation={{ swipe: 240 }}\n      carousel={{ finite: totalItems < 5 }}\n      controller={{ closeOnBackdropClick: true }}\n      plugins={getPlugins({\n        disableZoom,\n        disableVideo,\n        disableCaptions,\n        disableSlideshow,\n        disableThumbnails,\n        disableFullscreen,\n      })}\n      on={{\n        view: ({ index }) => {\n          if (onGetCurrentIndex) {\n            onGetCurrentIndex(index);\n          }\n        },\n      }}\n      toolbar={{\n        buttons: [\n          <DisplayTotal key={0} totalItems={totalItems} disableTotal={disableTotal} />,\n          'close',\n        ],\n      }}\n      render={{\n        iconClose: () => <Iconify width={24} icon=\"carbon:close\" />,\n        iconZoomIn: () => <Iconify width={24} icon=\"carbon:zoom-in\" />,\n        iconZoomOut: () => <Iconify width={24} icon=\"carbon:zoom-out\" />,\n        iconSlideshowPlay: () => <Iconify width={24} icon=\"carbon:play\" />,\n        iconSlideshowPause: () => <Iconify width={24} icon=\"carbon:pause\" />,\n        iconPrev: () => <Iconify width={32} icon=\"carbon:chevron-left\" />,\n        iconNext: () => <Iconify width={32} icon=\"carbon:chevron-right\" />,\n        iconExitFullscreen: () => <Iconify width={24} icon=\"carbon:center-to-fit\" />,\n        iconEnterFullscreen: () => <Iconify width={24} icon=\"carbon:fit-to-screen\" />,\n      }}\n      className={mergeClasses([lightboxClasses.root, className])}\n      {...other}\n    />\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction DisplayTotal({ totalItems, disableTotal }) {\n  const { currentIndex } = useLightboxState();\n\n  if (disableTotal) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      className=\"yarl__button\"\n      sx={{\n        typography: 'body2',\n        alignItems: 'center',\n        display: 'inline-flex',\n        justifyContent: 'center',\n      }}\n    >\n      <strong> {currentIndex + 1} </strong> / {totalItems}\n    </Box>\n  );\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function useLightBox(slides) {\n  const [selected, setSelected] = useState(-1);\n\n  const handleOpen = useCallback(\n    (slideUrl) => {\n      const slideIndex = slides.findIndex((slide) =>\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\n      );\n\n      setSelected(slideIndex);\n    },\n    [slides]\n  );\n\n  const handleClose = useCallback(() => {\n    setSelected(-1);\n  }, []);\n\n  return {\n    selected,\n    open: selected >= 0,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    setSelected,\n  };\n}\n","import { useMemo } from 'react';\nimport { keyBy } from 'es-toolkit';\nimport useSWR, { mutate } from 'swr';\n\nimport axios, { fetcher, endpoints } from 'src/lib/axios';\n\n// ----------------------------------------------------------------------\n\nconst enableServer = false;\n\nconst CHART_ENDPOINT = endpoints.chat;\n\nconst swrOptions = {\n  revalidateIfStale: enableServer,\n  revalidateOnFocus: enableServer,\n  revalidateOnReconnect: enableServer,\n};\n\n// ----------------------------------------------------------------------\n\nexport function useGetContacts() {\n  const url = [CHART_ENDPOINT, { params: { endpoint: 'contacts' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(url, fetcher, swrOptions);\n\n  const memoizedValue = useMemo(\n    () => ({\n      contacts: data?.contacts || [],\n      contactsLoading: isLoading,\n      contactsError: error,\n      contactsValidating: isValidating,\n      contactsEmpty: !isLoading && !isValidating && !data?.contacts.length,\n    }),\n    [data?.contacts, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversations() {\n  const url = [CHART_ENDPOINT, { params: { endpoint: 'conversations' } }];\n\n  const { data, isLoading, error, isValidating } = useSWR(url, fetcher, swrOptions);\n\n  const memoizedValue = useMemo(() => {\n    const byId = data?.conversations.length ? keyBy(data.conversations, (option) => option.id) : {};\n    const allIds = Object.keys(byId);\n\n    return {\n      conversations: { byId, allIds },\n      conversationsLoading: isLoading,\n      conversationsError: error,\n      conversationsValidating: isValidating,\n      conversationsEmpty: !isLoading && !isValidating && !allIds.length,\n    };\n  }, [data?.conversations, error, isLoading, isValidating]);\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useGetConversation(conversationId) {\n  const url = conversationId\n    ? [CHART_ENDPOINT, { params: { conversationId, endpoint: 'conversation' } }]\n    : '';\n\n  const { data, isLoading, error, isValidating } = useSWR(url, fetcher, swrOptions);\n\n  const memoizedValue = useMemo(\n    () => ({\n      conversation: data?.conversation,\n      conversationLoading: isLoading,\n      conversationError: error,\n      conversationValidating: isValidating,\n      conversationEmpty: !isLoading && !isValidating && !data?.conversation,\n    }),\n    [data?.conversation, error, isLoading, isValidating]\n  );\n\n  return memoizedValue;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function sendMessage(conversationId, messageData) {\n  const conversationsUrl = [CHART_ENDPOINT, { params: { endpoint: 'conversations' } }];\n\n  const conversationUrl = [\n    CHART_ENDPOINT,\n    { params: { conversationId, endpoint: 'conversation' } },\n  ];\n\n  /**\n   * Work on server\n   */\n  if (enableServer) {\n    const data = { conversationId, messageData };\n    await axios.put(CHART_ENDPOINT, data);\n  }\n\n  /**\n   * Work in local\n   */\n  mutate(\n    conversationUrl,\n    (currentData) => {\n      const currentConversation = currentData.conversation;\n\n      const conversation = {\n        ...currentConversation,\n        messages: [...currentConversation.messages, messageData],\n      };\n\n      return { ...currentData, conversation };\n    },\n    false\n  );\n\n  mutate(\n    conversationsUrl,\n    (currentData) => {\n      const currentConversations = currentData.conversations;\n\n      const conversations = currentConversations.map((conversation) =>\n        conversation.id === conversationId\n          ? { ...conversation, messages: [...conversation.messages, messageData] }\n          : conversation\n      );\n\n      return { ...currentData, conversations };\n    },\n    false\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport async function createConversation(conversationData) {\n  const url = [CHART_ENDPOINT, { params: { endpoint: 'conversations' } }];\n\n  /**\n   * Work on server\n   */\n  const data = { conversationData };\n  const res = await axios.post(CHART_ENDPOINT, data);\n\n  /**\n   * Work in local\n   */\n\n  mutate(\n    url,\n    (currentData) => {\n      const currentConversations = currentData.conversations;\n\n      const conversations = [...currentConversations, conversationData];\n\n      return { ...currentData, conversations };\n    },\n    false\n  );\n\n  return res.data;\n}\n\n// ----------------------------------------------------------------------\n\nexport async function clickConversation(conversationId) {\n  /**\n   * Work on server\n   */\n  if (enableServer) {\n    await axios.get(CHART_ENDPOINT, { params: { conversationId, endpoint: 'mark-as-seen' } });\n  }\n\n  /**\n   * Work in local\n   */\n\n  mutate(\n    [CHART_ENDPOINT, { params: { endpoint: 'conversations' } }],\n    (currentData) => {\n      const currentConversations = currentData.conversations;\n\n      const conversations = currentConversations.map((conversation) =>\n        conversation.id === conversationId ? { ...conversation, unreadCount: 0 } : conversation\n      );\n\n      return { ...currentData, conversations };\n    },\n    false\n  );\n}\n","import { styled } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { Iconify } from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport const CollapseButton = styled(({ selected, children, disabled, ...other }) => (\n  <ListItemButton disabled={disabled} {...other}>\n    {children}\n    <Iconify\n      width={16}\n      icon={\n        ((!selected || disabled) && 'eva:arrow-ios-forward-fill') || 'eva:arrow-ios-downward-fill'\n      }\n    />\n  </ListItemButton>\n))(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  paddingLeft: theme.spacing(2.5),\n  justifyContent: 'space-between',\n  paddingRight: theme.spacing(1.5),\n  color: theme.vars.palette.text.secondary,\n  backgroundColor: theme.vars.palette.background.neutral,\n}));\n\n// ----------------------------------------------------------------------\n\nexport const ToggleButton = styled(ButtonBase)(({ theme }) => ({\n  top: 84,\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  borderRadius: `0 12px 12px 0`,\n  boxShadow: theme.vars.customShadows.primary,\n  color: theme.vars.palette.primary.contrastText,\n  backgroundColor: theme.vars.palette.primary.main,\n  transition: theme.transitions.create(['all'], { duration: theme.transitions.duration.shorter }),\n  '&:hover': { backgroundColor: theme.vars.palette.primary.darker },\n}));\n","import { useCallback, startTransition } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemText from '@mui/material/ListItemText';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { fToNow } from 'src/utils/format-time';\n\nimport { clickConversation } from 'src/actions/chat';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\nimport { getNavItem } from './utils/get-nav-item';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavItem({ selected, collapse, conversation, onCloseMobile }) {\n  const { user } = useMockedUser();\n\n  const router = useRouter();\n\n  const theme = useTheme();\n  const mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  const { group, displayName, displayText, participants, lastActivity, hasOnlineInGroup } =\n    getNavItem({ conversation, currentUserId: `${user?.id}` });\n\n  const singleParticipant = participants[0];\n\n  const handleClickConversation = useCallback(async () => {\n    try {\n      if (!mdUp) {\n        onCloseMobile();\n      }\n\n      await clickConversation(conversation.id);\n\n      const redirectPath = `${paths.dashboard.chat}?id=${conversation.id}`;\n\n      startTransition(() => {\n        router.push(redirectPath);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [conversation.id, mdUp, onCloseMobile, router]);\n\n  const renderGroup = () => (\n    <Badge variant={hasOnlineInGroup ? 'online' : 'invisible'} badgeContent=\"\">\n      <AvatarGroup variant=\"compact\" sx={{ width: 48, height: 48 }}>\n        {participants.slice(0, 2).map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n        ))}\n      </AvatarGroup>\n    </Badge>\n  );\n\n  const renderSingle = () => (\n    <Badge variant={singleParticipant?.status} badgeContent=\"\">\n      <Avatar\n        alt={singleParticipant?.name}\n        src={singleParticipant?.avatarUrl}\n        sx={{ width: 48, height: 48 }}\n      />\n    </Badge>\n  );\n\n  return (\n    <Box component=\"li\" sx={{ display: 'flex' }}>\n      <ListItemButton\n        onClick={handleClickConversation}\n        sx={{\n          py: 1.5,\n          px: 2.5,\n          gap: 2,\n          ...(selected && { bgcolor: 'action.selected' }),\n        }}\n      >\n        <Badge\n          color=\"error\"\n          overlap=\"circular\"\n          badgeContent={collapse ? conversation.unreadCount : 0}\n        >\n          {group ? renderGroup() : renderSingle()}\n        </Badge>\n\n        {!collapse && (\n          <>\n            <ListItemText\n              primary={displayName}\n              secondary={displayText}\n              slotProps={{\n                primary: { noWrap: true },\n                secondary: {\n                  noWrap: true,\n                  sx: {\n                    ...(conversation.unreadCount && {\n                      color: 'text.primary',\n                      fontWeight: 'fontWeightSemiBold',\n                    }),\n                  },\n                },\n              }}\n            />\n\n            <Box\n              sx={{\n                display: 'flex',\n                alignSelf: 'stretch',\n                alignItems: 'flex-end',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography\n                noWrap\n                variant=\"body2\"\n                component=\"span\"\n                sx={{ mb: 1.5, fontSize: 12, color: 'text.disabled' }}\n              >\n                {fToNow(lastActivity)}\n              </Typography>\n\n              {!!conversation.unreadCount && (\n                <Box\n                  component=\"span\"\n                  sx={{\n                    width: 8,\n                    height: 8,\n                    borderRadius: '50%',\n                    bgcolor: 'info.main',\n                  }}\n                />\n              )}\n            </Box>\n          </>\n        )}\n      </ListItemButton>\n    </Box>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function getNavItem({ currentUserId, conversation }) {\n  const { messages, participants } = conversation;\n\n  const participantsInConversation = participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n\n  const lastMessage = messages[messages.length - 1];\n\n  const group = participantsInConversation.length > 1;\n\n  const displayName = participantsInConversation.map((participant) => participant.name).join(', ');\n\n  const hasOnlineInGroup = group\n    ? participantsInConversation.map((item) => item.status).includes('online')\n    : false;\n\n  let displayText = '';\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    group,\n    displayName,\n    displayText,\n    participants: participantsInConversation,\n    lastActivity: lastMessage.createdAt,\n    hasOnlineInGroup,\n  };\n}\n","import { useState, useCallback } from 'react';\nimport { usePopover } from 'minimal-shared/hooks';\n\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport { svgIconClasses } from '@mui/material/SvgIcon';\nimport Badge, { badgeClasses } from '@mui/material/Badge';\nimport InputBase, { inputBaseClasses } from '@mui/material/InputBase';\n\nimport { Iconify } from 'src/components/iconify';\nimport { CustomPopover } from 'src/components/custom-popover';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavAccount() {\n  const { user } = useMockedUser();\n\n  const menuActions = usePopover();\n\n  const [status, setStatus] = useState('online');\n\n  const handleChangeStatus = useCallback((event) => {\n    setStatus(event.target.value);\n  }, []);\n\n  const renderMenuActions = () => (\n    <CustomPopover\n      open={menuActions.open}\n      anchorEl={menuActions.anchorEl}\n      onClose={menuActions.onClose}\n      slotProps={{\n        paper: { sx: { p: 0, ml: 0, mt: 0.5 } },\n        arrow: { placement: 'top-left' },\n      }}\n    >\n      <Box\n        sx={{\n          py: 2,\n          pr: 1,\n          pl: 2,\n          gap: 2,\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <ListItemText primary={user?.displayName} secondary={user?.email} />\n\n        <Tooltip title=\"Log out\">\n          <IconButton color=\"error\">\n            <Iconify icon=\"ic:round-power-settings-new\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      <Divider sx={{ borderStyle: 'dashed' }} />\n\n      <MenuList sx={{ my: 0.5, px: 0.5 }}>\n        <MenuItem>\n          <Badge\n            variant={status}\n            badgeContent=\"\"\n            sx={{\n              width: 24,\n              height: 24,\n              alignItems: 'center',\n              justifyContent: 'center',\n              [`& .${badgeClasses.badge}`]: {\n                width: 12,\n                height: 12,\n                transform: 'unset',\n                position: 'static',\n              },\n            }}\n          />\n\n          <FormControl fullWidth>\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={handleChangeStatus}\n              input={<InputBase />}\n              inputProps={{ id: 'chat-status-select' }}\n              sx={{\n                [`& .${svgIconClasses.root}`]: { right: 0 },\n                [`& .${inputBaseClasses.input}`]: {\n                  typography: 'body2',\n                  textTransform: 'capitalize',\n                },\n              }}\n            >\n              {['online', 'always', 'busy', 'offline'].map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n        </MenuItem>\n\n        <MenuItem>\n          <Iconify width={24} icon=\"solar:user-id-bold\" />\n          Profile\n        </MenuItem>\n\n        <MenuItem>\n          <Iconify width={24} icon=\"eva:settings-2-fill\" />\n          Settings\n        </MenuItem>\n      </MenuList>\n    </CustomPopover>\n  );\n\n  return (\n    <>\n      <Badge\n        variant={status}\n        badgeContent=\"\"\n        overlap=\"circular\"\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Avatar\n          src={user?.photoURL}\n          alt={user?.displayName}\n          onClick={menuActions.onOpen}\n          sx={{ cursor: 'pointer', width: 48, height: 48 }}\n        >\n          {user?.displayName?.charAt(0).toUpperCase()}\n        </Avatar>\n      </Badge>\n\n      {renderMenuActions()}\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Skeleton from '@mui/material/Skeleton';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavItemSkeleton({ sx, itemCount = 6, ...other }) {\n  return Array.from({ length: itemCount }, (_, index) => (\n    <Box\n      key={index}\n      sx={[\n        () => ({\n          gap: 2,\n          px: 2.5,\n          py: 1.5,\n          display: 'flex',\n          alignItems: 'center',\n        }),\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 48, height: 48 }} />\n\n      <Stack spacing={1} flexGrow={1}>\n        <Skeleton sx={{ width: 0.75, height: 10 }} />\n        <Skeleton sx={{ width: 0.5, height: 10 }} />\n      </Stack>\n    </Box>\n  ));\n}\n\n// ----------------------------------------------------------------------\n\nexport function ChatHeaderSkeleton({ sx, ...other }) {\n  return (\n    <Box\n      sx={[{ width: 1, display: 'flex', alignItems: 'center' }, ...(Array.isArray(sx) ? sx : [sx])]}\n      {...other}\n    >\n      <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n      <Stack spacing={1} flexGrow={1} sx={{ mx: 2 }}>\n        <Skeleton sx={{ width: 96, height: 10 }} />\n        <Skeleton sx={{ width: 40, height: 10 }} />\n      </Stack>\n\n      <Skeleton variant=\"circular\" sx={{ width: 28, height: 28 }} />\n      <Skeleton variant=\"circular\" sx={{ width: 28, height: 28, mx: 1 }} />\n      <Skeleton variant=\"circular\" sx={{ width: 28, height: 28, mr: 1 }} />\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function ChatRoomSkeleton({ sx, ...other }) {\n  return (\n    <Box\n      sx={[\n        () => ({\n          pt: 5,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n        }),\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n      {...other}\n    >\n      <Stack alignItems=\"center\">\n        <Skeleton variant=\"circular\" sx={{ width: 96, height: 96 }} />\n        <Skeleton\n          sx={{\n            mb: 1,\n            mt: 2,\n            height: 10,\n            width: 0.65,\n          }}\n        />\n        <Skeleton sx={{ mb: 5, width: 0.35, height: 10 }} />\n        <CircularProgress color=\"inherit\" thickness={2} />\n      </Stack>\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { SearchNotFound } from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport function ChatNavSearchResults({ query, results, onClickResult }) {\n  const totalResults = results.length;\n\n  const notFound = !totalResults && !!query;\n\n  const renderNotFound = () => (\n    <SearchNotFound\n      query={query}\n      sx={{\n        p: 3,\n        mx: 'auto',\n        width: `calc(100% - 40px)`,\n        bgcolor: 'background.neutral',\n      }}\n    />\n  );\n\n  const renderResults = () => (\n    <nav>\n      <Box component=\"ul\" sx={{ '& li': { display: 'flex' } }}>\n        {results.map((result) => (\n          <li key={result.id}>\n            <ListItemButton\n              onClick={() => onClickResult(result)}\n              sx={{\n                gap: 2,\n                py: 1.5,\n                px: 2.5,\n                typography: 'subtitle2',\n              }}\n            >\n              <Avatar alt={result.name} src={result.avatarUrl} />\n              {result.name}\n            </ListItemButton>\n          </li>\n        ))}\n      </Box>\n    </nav>\n  );\n\n  return (\n    <>\n      <Typography variant=\"h6\" sx={{ px: 2.5, mb: 2 }}>\n        Contacts ({totalResults})\n      </Typography>\n\n      {notFound ? renderNotFound() : renderResults()}\n    </>\n  );\n}\n","import { uuidv4 } from 'minimal-shared/utils';\n\nimport { fSub } from 'src/utils/format-time';\n\n// ----------------------------------------------------------------------\n\nexport function initialConversation({ message = '', recipients, me }) {\n  const isGroup = recipients.length > 1;\n\n  const messageData = {\n    id: uuidv4(),\n    attachments: [],\n    body: message,\n    contentType: 'text',\n    createdAt: fSub({ minutes: 1 }),\n    senderId: me.id,\n  };\n\n  const conversationData = {\n    id: isGroup ? uuidv4() : recipients[0]?.id,\n    messages: [messageData],\n    participants: [...recipients, me],\n    type: isGroup ? 'GROUP' : 'ONE_TO_ONE',\n    unreadCount: 0,\n  };\n\n  return { messageData, conversationData };\n}\n","import { useMemo, useState, useEffect, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport TextField from '@mui/material/TextField';\nimport { useTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { today } from 'src/utils/format-time';\n\nimport { createConversation } from 'src/actions/chat';\n\nimport { Iconify } from 'src/components/iconify';\nimport { Scrollbar } from 'src/components/scrollbar';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\nimport { ToggleButton } from './styles';\nimport { ChatNavItem } from './chat-nav-item';\nimport { ChatNavAccount } from './chat-nav-account';\nimport { ChatNavItemSkeleton } from './chat-skeleton';\nimport { ChatNavSearchResults } from './chat-nav-search-results';\nimport { initialConversation } from './utils/initial-conversation';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 320;\n\nconst NAV_COLLAPSE_WIDTH = 96;\n\nexport function ChatNav({ loading, contacts, collapseNav, conversations, selectedConversationId }) {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const theme = useTheme();\n  const mdUp = useMediaQuery(theme.breakpoints.up('md'));\n\n  const {\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n    onCloseDesktop,\n    collapseDesktop,\n    onCollapseDesktop,\n  } = collapseNav;\n\n  const [searchContacts, setSearchContacts] = useState({ query: '', results: [] });\n\n  const myContact = useMemo(\n    () => ({\n      id: `${user?.id}`,\n      role: `${user?.role}`,\n      email: `${user?.email}`,\n      address: `${user?.address}`,\n      name: `${user?.displayName}`,\n      lastActivity: today(),\n      avatarUrl: `${user?.photoURL}`,\n      phoneNumber: `${user?.phoneNumber}`,\n      status: 'online',\n    }),\n    [user]\n  );\n\n  useEffect(() => {\n    if (!mdUp) {\n      onCloseDesktop();\n    }\n  }, [onCloseDesktop, mdUp]);\n\n  const handleToggleNav = useCallback(() => {\n    if (mdUp) {\n      onCollapseDesktop();\n    } else {\n      onCloseMobile();\n    }\n  }, [mdUp, onCloseMobile, onCollapseDesktop]);\n\n  const handleClickCompose = useCallback(() => {\n    if (!mdUp) {\n      onCloseMobile();\n    }\n    router.push(paths.dashboard.chat);\n  }, [mdUp, onCloseMobile, router]);\n\n  const handleSearchContacts = useCallback(\n    (inputValue) => {\n      setSearchContacts((prevState) => ({ ...prevState, query: inputValue }));\n\n      if (inputValue) {\n        const results = contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n        setSearchContacts((prevState) => ({ ...prevState, results }));\n      }\n    },\n    [contacts]\n  );\n\n  const handleClickAwaySearch = useCallback(() => {\n    setSearchContacts({ query: '', results: [] });\n  }, []);\n\n  const handleClickResult = useCallback(\n    async (result) => {\n      handleClickAwaySearch();\n\n      const linkTo = (id) => router.push(`${paths.dashboard.chat}?id=${id}`);\n\n      try {\n        // Check if the conversation already exists\n        if (conversations.allIds.includes(result.id)) {\n          linkTo(result.id);\n          return;\n        }\n\n        // Find the recipient in contacts\n        const recipient = contacts.find((contact) => contact.id === result.id);\n        if (!recipient) {\n          console.error('Recipient not found');\n          return;\n        }\n\n        // Prepare conversation data\n        const { conversationData } = initialConversation({\n          recipients: [recipient],\n          me: myContact,\n        });\n\n        // Create a new conversation\n        const res = await createConversation(conversationData);\n\n        if (!res || !res.conversation) {\n          console.error('Failed to create conversation');\n        }\n\n        // Navigate to the new conversation\n        linkTo(res.conversation.id);\n      } catch (error) {\n        console.error('Error handling click result:', error);\n      }\n    },\n    [contacts, conversations.allIds, handleClickAwaySearch, myContact, router]\n  );\n\n  const renderLoading = () => <ChatNavItemSkeleton />;\n\n  const renderList = () => (\n    <nav>\n      <Box component=\"ul\">\n        {conversations.allIds.map((conversationId) => (\n          <ChatNavItem\n            key={conversationId}\n            collapse={collapseDesktop}\n            conversation={conversations.byId[conversationId]}\n            selected={conversationId === selectedConversationId}\n            onCloseMobile={onCloseMobile}\n          />\n        ))}\n      </Box>\n    </nav>\n  );\n\n  const renderListResults = () => (\n    <ChatNavSearchResults\n      query={searchContacts.query}\n      results={searchContacts.results}\n      onClickResult={handleClickResult}\n    />\n  );\n\n  const renderSearchInput = () => (\n    <ClickAwayListener onClickAway={handleClickAwaySearch}>\n      <TextField\n        fullWidth\n        value={searchContacts.query}\n        onChange={(event) => handleSearchContacts(event.target.value)}\n        placeholder=\"Search contacts...\"\n        slotProps={{\n          input: {\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            ),\n          },\n        }}\n        sx={{ mt: 2.5 }}\n      />\n    </ClickAwayListener>\n  );\n\n  const renderContent = () => (\n    <>\n      <Box\n        sx={{\n          p: 2.5,\n          pb: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {!collapseDesktop && (\n          <>\n            <ChatNavAccount />\n            <Box sx={{ flexGrow: 1 }} />\n          </>\n        )}\n\n        <IconButton onClick={handleToggleNav}>\n          <Iconify\n            icon={collapseDesktop ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n          />\n        </IconButton>\n\n        {!collapseDesktop && (\n          <IconButton onClick={handleClickCompose}>\n            <Iconify width={24} icon=\"solar:user-plus-bold\" />\n          </IconButton>\n        )}\n      </Box>\n\n      <Box sx={{ p: 2.5, pt: 0 }}>{!collapseDesktop && renderSearchInput()}</Box>\n\n      {loading ? (\n        renderLoading()\n      ) : (\n        <Scrollbar sx={{ pb: 1 }}>\n          {searchContacts.query && !!conversations.allIds.length\n            ? renderListResults()\n            : renderList()}\n        </Scrollbar>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <ToggleButton onClick={onOpenMobile} sx={{ display: { md: 'none' } }}>\n        <Iconify width={16} icon=\"solar:users-group-rounded-bold\" />\n      </ToggleButton>\n\n      <Box\n        sx={{\n          minHeight: 0,\n          flex: '1 1 auto',\n          width: NAV_WIDTH,\n          flexDirection: 'column',\n          display: { xs: 'none', md: 'flex' },\n          borderRight: `solid 1px ${theme.vars.palette.divider}`,\n          transition: theme.transitions.create(['width'], {\n            duration: theme.transitions.duration.shorter,\n          }),\n          ...(collapseDesktop && { width: NAV_COLLAPSE_WIDTH }),\n        }}\n      >\n        {renderContent()}\n      </Box>\n\n      <Drawer\n        open={openMobile}\n        onClose={onCloseMobile}\n        slotProps={{ backdrop: { invisible: true } }}\n        PaperProps={{ sx: { width: NAV_WIDTH } }}\n      >\n        {renderContent()}\n      </Drawer>\n    </>\n  );\n}\n","import { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport function ChatLayout({ slots, sx, ...other }) {\n  return (\n    <LayoutRoot sx={sx} {...other}>\n      <LayoutNav>{slots.nav}</LayoutNav>\n\n      <LayoutContainer>\n        <LayoutHeader>{slots.header}</LayoutHeader>\n\n        <LayoutContent>\n          <LayoutMain>{slots.main}</LayoutMain>\n          <LayoutDetails>{slots.details}</LayoutDetails>\n        </LayoutContent>\n      </LayoutContainer>\n    </LayoutRoot>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst LayoutRoot = styled('div')(({ theme }) => ({\n  minHeight: 0,\n  flex: '1 1 0',\n  display: 'flex',\n  position: 'relative',\n  boxShadow: theme.vars.customShadows.card,\n  borderRadius: theme.shape.borderRadius * 2,\n  backgroundColor: theme.vars.palette.background.paper,\n}));\n\nconst LayoutHeader = styled('div')(({ theme }) => ({\n  height: 72,\n  flexShrink: 0,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(1, 1, 1, 2.5),\n  borderBottom: `solid 1px ${theme.vars.palette.divider}`,\n}));\n\nconst LayoutNav = styled('div')(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nconst LayoutContainer = styled('div')(() => ({\n  minWidth: 0,\n  display: 'flex',\n  flex: '1 1 auto',\n  flexDirection: 'column',\n}));\n\nconst LayoutContent = styled('div')(() => ({\n  minHeight: 0,\n  display: 'flex',\n  flex: '1 1 auto',\n}));\n\nconst LayoutMain = styled('div')(() => ({\n  minWidth: 0,\n  display: 'flex',\n  flex: '1 1 auto',\n  flexDirection: 'column',\n}));\n\nconst LayoutDetails = styled('div')(() => ({\n  minHeight: 0,\n  display: 'flex',\n  flexDirection: 'column',\n}));\n","import { varAlpha } from 'minimal-shared/utils';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport { Iconify } from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport function ChatRoomParticipantDialog({ participant, open, onClose }) {\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <Iconify icon=\"mingcute:close-line\" />\n      </IconButton>\n\n      <DialogContent sx={{ py: 5, px: 3, display: 'flex' }}>\n        <Avatar\n          alt={participant.name}\n          src={participant.avatarUrl}\n          sx={{ width: 96, height: 96, mr: 3 }}\n        />\n\n        <Stack spacing={1}>\n          <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\n            {participant.role}\n          </Typography>\n\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n\n          <Box sx={{ display: 'flex', typography: 'caption', color: 'text.disabled' }}>\n            <Iconify\n              icon=\"mingcute:location-fill\"\n              width={16}\n              sx={{ flexShrink: 0, mr: 0.5, mt: '2px' }}\n            />\n            {participant.address}\n          </Box>\n\n          <Box sx={{ gap: 1, pt: 1.5, display: 'flex' }}>\n            <IconButton\n              size=\"small\"\n              color=\"error\"\n              sx={[\n                (theme) => ({\n                  borderRadius: 1,\n                  bgcolor: varAlpha(theme.vars.palette.error.mainChannel, 0.08),\n                  '&:hover': { bgcolor: varAlpha(theme.vars.palette.error.mainChannel, 0.16) },\n                }),\n              ]}\n            >\n              <Iconify width={18} icon=\"solar:phone-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"info\"\n              sx={[\n                (theme) => ({\n                  borderRadius: 1,\n                  bgcolor: varAlpha(theme.vars.palette.info.mainChannel, 0.08),\n                  '&:hover': { bgcolor: varAlpha(theme.vars.palette.info.mainChannel, 0.16) },\n                }),\n              ]}\n            >\n              <Iconify width={18} icon=\"solar:chat-round-dots-bold\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"primary\"\n              sx={[\n                (theme) => ({\n                  borderRadius: 1,\n                  bgcolor: varAlpha(theme.vars.palette.primary.mainChannel, 0.08),\n                  '&:hover': { bgcolor: varAlpha(theme.vars.palette.primary.mainChannel, 0.16) },\n                }),\n              ]}\n            >\n              <Iconify width={18} icon=\"fluent:mail-24-filled\" />\n            </IconButton>\n\n            <IconButton\n              size=\"small\"\n              color=\"secondary\"\n              sx={[\n                (theme) => ({\n                  borderRadius: 1,\n                  bgcolor: varAlpha(theme.vars.palette.secondary.mainChannel, 0.08),\n                  '&:hover': { bgcolor: varAlpha(theme.vars.palette.secondary.mainChannel, 0.16) },\n                }),\n              ]}\n            >\n              <Iconify width={18} icon=\"solar:videocamera-record-bold\" />\n            </IconButton>\n          </Box>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { useBoolean } from 'minimal-shared/hooks';\n\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { CollapseButton } from './styles';\nimport { ChatRoomParticipantDialog } from './chat-room-participant-dialog';\n\n// ----------------------------------------------------------------------\n\nexport function ChatRoomGroup({ participants }) {\n  const collapse = useBoolean(true);\n\n  const [selected, setSelected] = useState(null);\n\n  const handleOpen = useCallback((participant) => {\n    setSelected(participant);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setSelected(null);\n  }, []);\n\n  const totalParticipants = participants.length;\n\n  const renderList = () => (\n    <>\n      {participants.map((participant) => (\n        <ListItemButton key={participant.id} onClick={() => handleOpen(participant)}>\n          <Badge variant={participant.status} badgeContent=\"\">\n            <Avatar alt={participant.name} src={participant.avatarUrl} />\n          </Badge>\n\n          <ListItemText\n            primary={participant.name}\n            secondary={participant.role}\n            slotProps={{\n              primary: { noWrap: true },\n              secondary: { noWrap: true, sx: { typography: 'caption' } },\n            }}\n            sx={{ ml: 2 }}\n          />\n        </ListItemButton>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <CollapseButton\n        selected={collapse.value}\n        disabled={!totalParticipants}\n        onClick={collapse.onToggle}\n      >\n        {`In room (${totalParticipants})`}\n      </CollapseButton>\n\n      <Collapse in={collapse.value}>{renderList()}</Collapse>\n\n      {selected && (\n        <ChatRoomParticipantDialog participant={selected} open={!!selected} onClose={handleClose} />\n      )}\n    </>\n  );\n}\n","import { useBoolean } from 'minimal-shared/hooks';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\n\nimport { Iconify } from 'src/components/iconify';\n\nimport { CollapseButton } from './styles';\n\n// ----------------------------------------------------------------------\n\nexport function ChatRoomSingle({ participant }) {\n  const collapse = useBoolean(true);\n\n  const renderInfo = () => (\n    <Stack alignItems=\"center\" sx={{ py: 5 }}>\n      <Avatar\n        alt={participant?.name}\n        src={participant?.avatarUrl}\n        sx={{ width: 96, height: 96, mb: 2 }}\n      />\n      <Typography variant=\"subtitle1\">{participant?.name}</Typography>\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\n        {participant?.role}\n      </Typography>\n    </Stack>\n  );\n\n  const renderContact = () => (\n    <Stack spacing={2} sx={{ px: 2, py: 2.5 }}>\n      {[\n        { icon: 'mingcute:location-fill', value: participant?.address },\n        { icon: 'solar:phone-bold', value: participant?.phoneNumber },\n        { icon: 'fluent:mail-24-filled', value: participant?.email },\n      ].map((item) => (\n        <Box\n          key={item.icon}\n          sx={{\n            gap: 1,\n            display: 'flex',\n            typography: 'body2',\n            wordBreak: 'break-all',\n          }}\n        >\n          <Iconify icon={item.icon} sx={{ flexShrink: 0, color: 'text.disabled' }} />\n          {item.value}\n        </Box>\n      ))}\n    </Stack>\n  );\n\n  return (\n    <>\n      {renderInfo()}\n\n      <CollapseButton selected={collapse.value} onClick={collapse.onToggle}>\n        Information\n      </CollapseButton>\n\n      <Collapse in={collapse.value}>{renderContact()}</Collapse>\n    </>\n  );\n}\n","import { useBoolean } from 'minimal-shared/hooks';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { fDateTime } from 'src/utils/format-time';\n\nimport { FileThumbnail } from 'src/components/file-thumbnail';\n\nimport { CollapseButton } from './styles';\n\n// ----------------------------------------------------------------------\n\nexport function ChatRoomAttachments({ attachments }) {\n  const collapse = useBoolean(true);\n\n  const totalAttachments = attachments.length;\n\n  const renderList = () =>\n    attachments.map((attachment, index) => (\n      <Box key={attachment.name + index} sx={{ gap: 1.5, display: 'flex', alignItems: 'center' }}>\n        <FileThumbnail\n          imageView\n          file={attachment.preview}\n          onDownload={() => console.info('DOWNLOAD')}\n          slotProps={{ icon: { sx: { width: 24, height: 24 } } }}\n          sx={{ width: 40, height: 40, bgcolor: 'background.neutral' }}\n        />\n\n        <ListItemText\n          primary={attachment.name}\n          secondary={fDateTime(attachment.createdAt)}\n          slotProps={{\n            primary: { noWrap: true, sx: { typography: 'body2' } },\n            secondary: {\n              noWrap: true,\n              sx: {\n                mt: 0.25,\n                typography: 'caption',\n                color: 'text.disabled',\n              },\n            },\n          }}\n        />\n      </Box>\n    ));\n\n  return (\n    <>\n      <CollapseButton\n        selected={collapse.value}\n        disabled={!totalAttachments}\n        onClick={collapse.onToggle}\n      >\n        {`Attachments (${totalAttachments})`}\n      </CollapseButton>\n\n      {!!totalAttachments && (\n        <Collapse in={collapse.value}>\n          <Stack spacing={2} sx={{ p: 2 }}>\n            {renderList()}\n          </Stack>\n        </Collapse>\n      )}\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\n\nimport { Scrollbar } from 'src/components/scrollbar';\n\nimport { ChatRoomGroup } from './chat-room-group';\nimport { ChatRoomSkeleton } from './chat-skeleton';\nimport { ChatRoomSingle } from './chat-room-single';\nimport { ChatRoomAttachments } from './chat-room-attachments';\n\n// ----------------------------------------------------------------------\n\nconst NAV_WIDTH = 280;\n\nconst NAV_DRAWER_WIDTH = 320;\n\nexport function ChatRoom({ collapseNav, participants, messages, loading, sx, ...other }) {\n  const { collapseDesktop, openMobile, onCloseMobile } = collapseNav;\n\n  const isGroup = participants.length > 1;\n\n  const attachments = messages.map((msg) => msg.attachments).flat(1) || [];\n\n  const renderContent = () =>\n    loading ? (\n      <ChatRoomSkeleton />\n    ) : (\n      <Scrollbar>\n        <div>\n          {isGroup ? (\n            <ChatRoomGroup participants={participants} />\n          ) : (\n            <ChatRoomSingle participant={participants[0]} />\n          )}\n\n          <ChatRoomAttachments attachments={attachments} />\n        </div>\n      </Scrollbar>\n    );\n\n  return (\n    <>\n      <Box\n        sx={[\n          (theme) => ({\n            minHeight: 0,\n            flex: '1 1 auto',\n            width: NAV_WIDTH,\n            flexDirection: 'column',\n            display: { xs: 'none', lg: 'flex' },\n            borderLeft: `solid 1px ${theme.vars.palette.divider}`,\n            transition: theme.transitions.create(['width'], {\n              duration: theme.transitions.duration.shorter,\n            }),\n            ...(collapseDesktop && { width: 0 }),\n          }),\n          ...(Array.isArray(sx) ? sx : [sx]),\n        ]}\n        {...other}\n      >\n        {!collapseDesktop && renderContent()}\n      </Box>\n\n      <Drawer\n        anchor=\"right\"\n        open={openMobile}\n        onClose={onCloseMobile}\n        slotProps={{ backdrop: { invisible: true } }}\n        PaperProps={{ sx: { width: NAV_DRAWER_WIDTH } }}\n      >\n        {renderContent()}\n      </Drawer>\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { fToNow } from 'src/utils/format-time';\n\nimport { Iconify } from 'src/components/iconify';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\nimport { getMessage } from './utils/get-message';\n\n// ----------------------------------------------------------------------\n\nexport function ChatMessageItem({ message, participants, onOpenLightbox }) {\n  const { user } = useMockedUser();\n\n  const { me, senderDetails, hasImage } = getMessage({\n    message,\n    participants,\n    currentUserId: `${user?.id}`,\n  });\n\n  const { firstName, avatarUrl } = senderDetails;\n\n  const { body, createdAt } = message;\n\n  const renderInfo = () => (\n    <Typography\n      noWrap\n      variant=\"caption\"\n      sx={{ mb: 1, color: 'text.disabled', ...(!me && { mr: 'auto' }) }}\n    >\n      {!me && `${firstName}, `}\n\n      {fToNow(createdAt)}\n    </Typography>\n  );\n\n  const renderBody = () => (\n    <Stack\n      sx={{\n        p: 1.5,\n        minWidth: 48,\n        maxWidth: 320,\n        borderRadius: 1,\n        typography: 'body2',\n        bgcolor: 'background.neutral',\n        ...(me && { color: 'grey.800', bgcolor: 'primary.lighter' }),\n        ...(hasImage && { p: 0, bgcolor: 'transparent' }),\n      }}\n    >\n      {hasImage ? (\n        <Box\n          component=\"img\"\n          alt=\"Attachment\"\n          src={body}\n          onClick={() => onOpenLightbox(body)}\n          sx={{\n            width: 400,\n            height: 'auto',\n            borderRadius: 1.5,\n            cursor: 'pointer',\n            objectFit: 'cover',\n            aspectRatio: '16/11',\n            '&:hover': { opacity: 0.9 },\n          }}\n        />\n      ) : (\n        body\n      )}\n    </Stack>\n  );\n\n  const renderActions = () => (\n    <Box\n      className=\"message-actions\"\n      sx={(theme) => ({\n        pt: 0.5,\n        left: 0,\n        opacity: 0,\n        top: '100%',\n        display: 'flex',\n        position: 'absolute',\n        transition: theme.transitions.create(['opacity'], {\n          duration: theme.transitions.duration.shorter,\n        }),\n        ...(me && { right: 0, left: 'unset' }),\n      })}\n    >\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:reply-bold\" width={16} />\n      </IconButton>\n\n      <IconButton size=\"small\">\n        <Iconify icon=\"eva:smiling-face-fill\" width={16} />\n      </IconButton>\n\n      <IconButton size=\"small\">\n        <Iconify icon=\"solar:trash-bin-trash-bold\" width={16} />\n      </IconButton>\n    </Box>\n  );\n\n  if (!message.body) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ mb: 5, display: 'flex', justifyContent: me ? 'flex-end' : 'unset' }}>\n      {!me && <Avatar alt={firstName} src={avatarUrl} sx={{ width: 32, height: 32, mr: 2 }} />}\n\n      <Stack alignItems={me ? 'flex-end' : 'flex-start'}>\n        {renderInfo()}\n\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            position: 'relative',\n            '&:hover': { '& .message-actions': { opacity: 1 } },\n          }}\n        >\n          {renderBody()}\n          {renderActions()}\n        </Box>\n      </Stack>\n    </Box>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function getMessage({ message, participants, currentUserId }) {\n  const sender = participants.find((participant) => participant.id === message.senderId);\n\n  const isCurrentUser = message.senderId === currentUserId;\n\n  const senderDetails = isCurrentUser\n    ? { type: 'me' }\n    : { avatarUrl: sender?.avatarUrl, firstName: sender?.name?.split(' ')[0] ?? 'Unknown' };\n\n  const hasImage = message.contentType === 'image';\n\n  return { hasImage, me: isCurrentUser, senderDetails };\n}\n","import Stack from '@mui/material/Stack';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { Scrollbar } from 'src/components/scrollbar';\nimport { Lightbox, useLightBox } from 'src/components/lightbox';\n\nimport { ChatMessageItem } from './chat-message-item';\nimport { useMessagesScroll } from './hooks/use-messages-scroll';\n\n// ----------------------------------------------------------------------\n\nexport function ChatMessageList({ messages = [], participants, loading }) {\n  const { messagesEndRef } = useMessagesScroll(messages);\n\n  const slides = messages\n    .filter((message) => message.contentType === 'image')\n    .map((message) => ({ src: message.body }));\n\n  const lightbox = useLightBox(slides);\n\n  if (loading) {\n    return (\n      <Stack sx={{ flex: '1 1 auto', position: 'relative' }}>\n        <LinearProgress\n          color=\"inherit\"\n          sx={{\n            top: 0,\n            left: 0,\n            width: 1,\n            height: 2,\n            borderRadius: 0,\n            position: 'absolute',\n          }}\n        />\n      </Stack>\n    );\n  }\n\n  return (\n    <>\n      <Scrollbar\n        ref={messagesEndRef}\n        sx={{\n          px: 3,\n          pt: 5,\n          pb: 3,\n          flex: '1 1 auto',\n        }}\n      >\n        {messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            participants={participants}\n            onOpenLightbox={() => lightbox.onOpen(message.body)}\n          />\n        ))}\n      </Scrollbar>\n\n      <Lightbox\n        slides={slides}\n        open={lightbox.open}\n        close={lightbox.onClose}\n        index={lightbox.selected}\n      />\n    </>\n  );\n}\n","import { useRef, useEffect, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function useMessagesScroll(messages) {\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = useCallback(() => {\n    if (!messages) {\n      return;\n    }\n\n    if (!messagesEndRef.current) {\n      return;\n    }\n\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return { messagesEndRef };\n}\n","import { useRef, useMemo, useState, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n\nimport { today } from 'src/utils/format-time';\n\nimport { sendMessage, createConversation } from 'src/actions/chat';\n\nimport { Iconify } from 'src/components/iconify';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\nimport { initialConversation } from './utils/initial-conversation';\n\n// ----------------------------------------------------------------------\n\nexport function ChatMessageInput({\n  disabled,\n  recipients,\n  onAddRecipients,\n  selectedConversationId,\n}) {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const fileRef = useRef(null);\n\n  const [message, setMessage] = useState('');\n\n  const myContact = useMemo(\n    () => ({\n      id: `${user?.id}`,\n      role: `${user?.role}`,\n      email: `${user?.email}`,\n      address: `${user?.address}`,\n      name: `${user?.displayName}`,\n      lastActivity: today(),\n      avatarUrl: `${user?.photoURL}`,\n      phoneNumber: `${user?.phoneNumber}`,\n      status: 'online',\n    }),\n    [user]\n  );\n\n  const { messageData, conversationData } = initialConversation({\n    message,\n    recipients,\n    me: myContact,\n  });\n\n  const handleAttach = useCallback(() => {\n    if (fileRef.current) {\n      fileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeMessage = useCallback((event) => {\n    setMessage(event.target.value);\n  }, []);\n\n  const handleSendMessage = useCallback(\n    async (event) => {\n      if (event.key !== 'Enter' || !message) return;\n\n      try {\n        if (selectedConversationId) {\n          // If the conversation already exists\n          await sendMessage(selectedConversationId, messageData);\n        } else {\n          // If the conversation does not exist\n          const res = await createConversation(conversationData);\n          router.push(`${paths.dashboard.chat}?id=${res.conversation.id}`);\n\n          onAddRecipients([]);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setMessage('');\n      }\n    },\n    [conversationData, message, messageData, onAddRecipients, router, selectedConversationId]\n  );\n\n  return (\n    <>\n      <InputBase\n        name=\"chat-message\"\n        id=\"chat-message-input\"\n        value={message}\n        onKeyUp={handleSendMessage}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        disabled={disabled}\n        startAdornment={\n          <IconButton>\n            <Iconify icon=\"eva:smiling-face-fill\" />\n          </IconButton>\n        }\n        endAdornment={\n          <Box sx={{ flexShrink: 0, display: 'flex' }}>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"solar:gallery-add-bold\" />\n            </IconButton>\n            <IconButton onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" />\n            </IconButton>\n            <IconButton>\n              <Iconify icon=\"solar:microphone-bold\" />\n            </IconButton>\n          </Box>\n        }\n        sx={[\n          (theme) => ({\n            px: 1,\n            height: 56,\n            flexShrink: 0,\n            borderTop: `solid 1px ${theme.vars.palette.divider}`,\n          }),\n        ]}\n      />\n\n      <input type=\"file\" ref={fileRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport { usePopover } from 'minimal-shared/hooks';\n\nimport Box from '@mui/material/Box';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\n\nimport { fToNow } from 'src/utils/format-time';\n\nimport { Iconify } from 'src/components/iconify';\nimport { CustomPopover } from 'src/components/custom-popover';\n\nimport { ChatHeaderSkeleton } from './chat-skeleton';\n\n// ----------------------------------------------------------------------\n\nexport function ChatHeaderDetail({ collapseNav, participants, loading }) {\n  const theme = useTheme();\n  const lgUp = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const menuActions = usePopover();\n\n  const isGroup = participants.length > 1;\n\n  const singleParticipant = participants[0];\n\n  const { collapseDesktop, onCollapseDesktop, onOpenMobile } = collapseNav;\n\n  const handleToggleNav = useCallback(() => {\n    if (lgUp) {\n      onCollapseDesktop();\n    } else {\n      onOpenMobile();\n    }\n  }, [lgUp]);\n\n  const renderGroup = () => (\n    <AvatarGroup max={3} sx={{ [`& .${avatarGroupClasses.avatar}`]: { width: 32, height: 32 } }}>\n      {participants.map((participant) => (\n        <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\n      ))}\n    </AvatarGroup>\n  );\n\n  const renderSingle = () => (\n    <Box sx={{ gap: 2, display: 'flex', alignItems: 'center' }}>\n      <Badge variant={singleParticipant?.status} badgeContent=\"\">\n        <Avatar src={singleParticipant?.avatarUrl} alt={singleParticipant?.name} />\n      </Badge>\n\n      <ListItemText\n        primary={singleParticipant?.name}\n        secondary={\n          singleParticipant?.status === 'offline'\n            ? fToNow(singleParticipant?.lastActivity)\n            : singleParticipant?.status\n        }\n      />\n    </Box>\n  );\n\n  if (loading) {\n    return <ChatHeaderSkeleton />;\n  }\n\n  const renderMenuActions = () => (\n    <CustomPopover\n      open={menuActions.open}\n      anchorEl={menuActions.anchorEl}\n      onClose={menuActions.onClose}\n    >\n      <MenuList>\n        <MenuItem onClick={() => menuActions.onClose()}>\n          <Iconify icon=\"solar:bell-off-bold\" />\n          Hide notifications\n        </MenuItem>\n\n        <MenuItem onClick={() => menuActions.onClose()}>\n          <Iconify icon=\"solar:forbidden-circle-bold\" />\n          Block\n        </MenuItem>\n\n        <MenuItem onClick={() => menuActions.onClose()}>\n          <Iconify icon=\"solar:danger-triangle-bold\" />\n          Report\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem onClick={() => menuActions.onClose()} sx={{ color: 'error.main' }}>\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\n          Delete\n        </MenuItem>\n      </MenuList>\n    </CustomPopover>\n  );\n\n  return (\n    <>\n      {isGroup ? renderGroup() : renderSingle()}\n\n      <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'flex-end' }}>\n        <IconButton>\n          <Iconify icon=\"solar:phone-bold\" />\n        </IconButton>\n\n        <IconButton>\n          <Iconify icon=\"solar:videocamera-record-bold\" />\n        </IconButton>\n\n        <IconButton onClick={handleToggleNav}>\n          <Iconify icon={!collapseDesktop ? 'ri:sidebar-unfold-fill' : 'ri:sidebar-fold-fill'} />\n        </IconButton>\n\n        <IconButton onClick={menuActions.onOpen}>\n          <Iconify icon=\"eva:more-vertical-fill\" />\n        </IconButton>\n      </Box>\n\n      {renderMenuActions()}\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { varAlpha } from 'minimal-shared/utils';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport { Iconify } from 'src/components/iconify';\nimport { SearchNotFound } from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport function ChatHeaderCompose({ contacts, onAddRecipients }) {\n  const [searchRecipients, setSearchRecipients] = useState('');\n\n  const handleAddRecipients = useCallback(\n    (selected) => {\n      setSearchRecipients('');\n      onAddRecipients(selected);\n    },\n    [onAddRecipients]\n  );\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.primary', mr: 2 }}>\n        To:\n      </Typography>\n\n      <Autocomplete\n        sx={{ minWidth: { md: 320 }, flexGrow: { xs: 1, md: 'unset' } }}\n        multiple\n        limitTags={3}\n        popupIcon={null}\n        defaultValue={[]}\n        disableCloseOnSelect\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\n        onChange={(event, newValue) => handleAddRecipients(newValue)}\n        onInputChange={(event, newValue) => setSearchRecipients(newValue)}\n        options={contacts}\n        getOptionLabel={(recipient) => recipient.name}\n        isOptionEqualToValue={(option, value) => option.id === value.id}\n        renderInput={(params) => <TextField {...params} placeholder=\"+ Recipients\" />}\n        renderOption={(props, recipient, { selected }) => (\n          <li {...props} key={recipient.id}>\n            <Box\n              key={recipient.id}\n              sx={{\n                mr: 1,\n                width: 32,\n                height: 32,\n                overflow: 'hidden',\n                borderRadius: '50%',\n                position: 'relative',\n              }}\n            >\n              <Avatar alt={recipient.name} src={recipient.avatarUrl} sx={{ width: 1, height: 1 }} />\n              <Box\n                sx={[\n                  (theme) => ({\n                    top: 0,\n                    left: 0,\n                    width: 1,\n                    height: 1,\n                    opacity: 0,\n                    display: 'flex',\n                    position: 'absolute',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    bgcolor: varAlpha(theme.vars.palette.grey['900Channel'], 0.8),\n                    transition: theme.transitions.create(['opacity'], {\n                      easing: theme.transitions.easing.easeInOut,\n                      duration: theme.transitions.duration.shorter,\n                    }),\n                    ...(selected && { opacity: 1, color: 'primary.main' }),\n                  }),\n                ]}\n              >\n                <Iconify icon=\"eva:checkmark-fill\" />\n              </Box>\n            </Box>\n\n            {recipient.name}\n          </li>\n        )}\n        renderTags={(selected, getTagProps) =>\n          selected.map((recipient, index) => (\n            <Chip\n              {...getTagProps({ index })}\n              key={recipient.id}\n              label={recipient.name}\n              avatar={<Avatar alt={recipient.name} src={recipient.avatarUrl} />}\n              size=\"small\"\n              variant=\"soft\"\n            />\n          ))\n        }\n      />\n    </>\n  );\n}\n","import { useState, useCallback } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport function useCollapseNav() {\n  const [openMobile, setOpenMobile] = useState(false);\n\n  const [collapseDesktop, setCollapseDesktop] = useState(false);\n\n  const onCollapseDesktop = useCallback(() => {\n    setCollapseDesktop((prev) => !prev);\n  }, []);\n\n  const onCloseDesktop = useCallback(() => {\n    setCollapseDesktop(false);\n  }, []);\n\n  const onOpenMobile = useCallback(() => {\n    setOpenMobile(true);\n  }, []);\n\n  const onCloseMobile = useCallback(() => {\n    setOpenMobile(false);\n  }, []);\n\n  return {\n    collapseDesktop,\n    onCloseDesktop,\n    onCollapseDesktop,\n    //\n    openMobile,\n    onOpenMobile,\n    onCloseMobile,\n  };\n}\n","import { useState, useEffect, useCallback, startTransition } from 'react';\n\nimport Typography from '@mui/material/Typography';\n\nimport { paths } from 'src/routes/paths';\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\n\nimport { CONFIG } from 'src/global-config';\nimport { DashboardContent } from 'src/layouts/dashboard';\nimport { useGetContacts, useGetConversation, useGetConversations } from 'src/actions/chat';\n\nimport { EmptyContent } from 'src/components/empty-content';\n\nimport { useMockedUser } from 'src/auth/hooks';\n\nimport { ChatNav } from '../chat-nav';\nimport { ChatLayout } from '../layout';\nimport { ChatRoom } from '../chat-room';\nimport { ChatMessageList } from '../chat-message-list';\nimport { ChatMessageInput } from '../chat-message-input';\nimport { ChatHeaderDetail } from '../chat-header-detail';\nimport { ChatHeaderCompose } from '../chat-header-compose';\nimport { useCollapseNav } from '../hooks/use-collapse-nav';\n\n// ----------------------------------------------------------------------\n\nexport function ChatView() {\n  const router = useRouter();\n\n  const { user } = useMockedUser();\n\n  const { contacts } = useGetContacts();\n\n  const searchParams = useSearchParams();\n  const selectedConversationId = searchParams.get('id') || '';\n\n  const { conversations, conversationsLoading } = useGetConversations();\n  const { conversation, conversationError, conversationLoading } =\n    useGetConversation(selectedConversationId);\n\n  const roomNav = useCollapseNav();\n  const conversationsNav = useCollapseNav();\n\n  const [recipients, setRecipients] = useState([]);\n\n  useEffect(() => {\n    if (!selectedConversationId) {\n      startTransition(() => {\n        router.push(paths.dashboard.chat);\n      });\n    }\n  }, [conversationError, router, selectedConversationId]);\n\n  const handleAddRecipients = useCallback((selected) => {\n    setRecipients(selected);\n  }, []);\n\n  const filteredParticipants = conversation\n    ? conversation.participants.filter((participant) => participant.id !== `${user?.id}`)\n    : [];\n\n  const hasConversation = selectedConversationId && conversation;\n\n  return (\n    <DashboardContent\n      maxWidth={false}\n      sx={{ display: 'flex', flex: '1 1 auto', flexDirection: 'column' }}\n    >\n      <Typography variant=\"h4\" sx={{ mb: { xs: 3, md: 5 } }}>\n        Chat\n      </Typography>\n\n      <ChatLayout\n        slots={{\n          header: hasConversation ? (\n            <ChatHeaderDetail\n              collapseNav={roomNav}\n              participants={filteredParticipants}\n              loading={conversationLoading}\n            />\n          ) : (\n            <ChatHeaderCompose contacts={contacts} onAddRecipients={handleAddRecipients} />\n          ),\n          nav: (\n            <ChatNav\n              contacts={contacts}\n              conversations={conversations}\n              selectedConversationId={selectedConversationId}\n              collapseNav={conversationsNav}\n              loading={conversationsLoading}\n            />\n          ),\n          main: (\n            <>\n              {selectedConversationId ? (\n                conversationError ? (\n                  <EmptyContent\n                    title={conversationError.message}\n                    imgUrl={`${CONFIG.assetsDir}/assets/icons/empty/ic-chat-empty.svg`}\n                  />\n                ) : (\n                  <ChatMessageList\n                    messages={conversation?.messages ?? []}\n                    participants={filteredParticipants}\n                    loading={conversationLoading}\n                  />\n                )\n              ) : (\n                <EmptyContent\n                  title=\"Good morning!\"\n                  description=\"Write something awesome...\"\n                  imgUrl={`${CONFIG.assetsDir}/assets/icons/empty/ic-chat-active.svg`}\n                />\n              )}\n\n              <ChatMessageInput\n                recipients={recipients}\n                onAddRecipients={handleAddRecipients}\n                selectedConversationId={selectedConversationId}\n                disabled={!recipients.length && !selectedConversationId}\n              />\n            </>\n          ),\n          details: hasConversation && (\n            <ChatRoom\n              collapseNav={roomNav}\n              participants={filteredParticipants}\n              loading={conversationLoading}\n              messages={conversation?.messages ?? []}\n            />\n          ),\n        }}\n      />\n    </DashboardContent>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { CONFIG } from 'src/global-config';\n\nimport { ChatView } from 'src/sections/chat/view';\n\n// ----------------------------------------------------------------------\n\nconst metadata = { title: `Chat | Dashboard - ${CONFIG.appName}` };\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> {metadata.title}</title>\n      </Helmet>\n\n      <ChatView />\n    </>\n  );\n}\n"],"names":["EmptyContent","_ref","_slotProps$img","_slotProps$img$sx","_slotProps$img2","_slotProps$img3","_slotProps$title","_slotProps$title$sx","_slotProps$title2","_slotProps$title3","_slotProps$descriptio","_slotProps$descriptio2","_slotProps$descriptio3","_slotProps$descriptio4","sx","imgUrl","action","filled","slotProps","description","title","other","_jsxs","ContentRoot","children","_jsx","Box","component","alt","src","CONFIG","assetsDir","img","width","maxWidth","Array","isArray","Typography","variant","mt","textAlign","color","styled","shouldForwardProp","prop","includes","_ref2","theme","flexGrow","height","display","alignItems","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","varAlpha","vars","palette","grey","border","getPlugins","disableZoom","disableVideo","disableCaptions","disableSlideshow","disableThumbnails","disableFullscreen","plugins","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","filter","plugin","lightboxClasses","root","createClasses","Lightbox","slides","disableTotal","onGetCurrentIndex","className","totalItems","length","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","on","view","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","mergeClasses","_ref3","currentIndex","useLightboxState","typography","useLightBox","selected","setSelected","useState","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","onClose","enableServer","CHART_ENDPOINT","endpoints","chat","swrOptions","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","async","createConversation","conversationData","url","params","endpoint","data","res","axios","post","mutate","currentData","conversations","CollapseButton","disabled","ListItemButton","overline","paddingLeft","paddingRight","text","secondary","background","neutral","ToggleButton","ButtonBase","top","left","zIndex","position","boxShadow","customShadows","primary","contrastText","main","transition","transitions","create","duration","shorter","darker","ChatNavItem","collapse","conversation","onCloseMobile","user","useMockedUser","router","useRouter","useTheme","mdUp","useMediaQuery","breakpoints","up","group","displayName","displayText","participants","lastActivity","hasOnlineInGroup","currentUserId","messages","participantsInConversation","participant","id","lastMessage","map","name","join","item","status","senderId","contentType","body","createdAt","getNavItem","singleParticipant","handleClickConversation","conversationId","get","unreadCount","clickConversation","redirectPath","paths","dashboard","startTransition","push","error","console","onClick","py","px","gap","bgcolor","Badge","overlap","badgeContent","AvatarGroup","slice","Avatar","avatarUrl","_Fragment","ListItemText","noWrap","fontWeight","alignSelf","mb","fontSize","fToNow","ChatNavAccount","_user$displayName","menuActions","usePopover","setStatus","handleChangeStatus","event","target","value","anchorOrigin","vertical","horizontal","photoURL","cursor","charAt","toUpperCase","CustomPopover","anchorEl","paper","p","ml","arrow","placement","pr","pl","email","Tooltip","IconButton","Divider","borderStyle","MenuList","my","MenuItem","badgeClasses","badge","transform","FormControl","fullWidth","Select","native","onChange","input","InputBase","inputProps","svgIconClasses","right","inputBaseClasses","textTransform","option","ChatNavItemSkeleton","itemCount","from","_","Skeleton","Stack","ChatHeaderSkeleton","mx","mr","ChatRoomSkeleton","pt","CircularProgress","thickness","ChatNavSearchResults","query","results","onClickResult","totalResults","notFound","SearchNotFound","result","initialConversation","_recipients$","message","recipients","me","isGroup","messageData","uuidv4","attachments","fSub","minutes","NAV_WIDTH","NAV_COLLAPSE_WIDTH","ChatNav","loading","contacts","collapseNav","selectedConversationId","openMobile","onOpenMobile","onCloseDesktop","collapseDesktop","onCollapseDesktop","searchContacts","setSearchContacts","myContact","useMemo","role","address","today","phoneNumber","useEffect","handleToggleNav","handleClickCompose","handleSearchContacts","inputValue","prevState","contact","toLowerCase","handleClickAwaySearch","handleClickResult","linkTo","allIds","recipient","find","renderContent","pb","ClickAwayListener","onClickAway","TextField","placeholder","startAdornment","InputAdornment","Scrollbar","byId","md","minHeight","flex","xs","borderRight","divider","Drawer","backdrop","invisible","PaperProps","ChatLayout","slots","LayoutRoot","LayoutNav","nav","LayoutContainer","LayoutHeader","header","LayoutContent","LayoutMain","LayoutDetails","details","card","flexShrink","borderBottom","minWidth","ChatRoomParticipantDialog","Dialog","DialogContent","size","mainChannel","info","ChatRoomGroup","useBoolean","handleOpen","handleClose","totalParticipants","onToggle","Collapse","in","ChatRoomSingle","wordBreak","ChatRoomAttachments","totalAttachments","attachment","FileThumbnail","imageView","file","preview","onDownload","fDateTime","NAV_DRAWER_WIDTH","ChatRoom","msg","flat","lg","borderLeft","anchor","ChatMessageItem","onOpenLightbox","senderDetails","hasImage","_sender$name$split$","_sender$name","sender","isCurrentUser","firstName","split","getMessage","opacity","objectFit","aspectRatio","ChatMessageList","messagesEndRef","useRef","scrollToBottom","current","scrollTop","scrollHeight","useMessagesScroll","lightbox","LinearProgress","ref","close","ChatMessageInput","onAddRecipients","fileRef","setMessage","handleAttach","click","handleChangeMessage","handleSendMessage","key","conversationsUrl","conversationUrl","put","currentConversation","sendMessage","onKeyUp","endAdornment","borderTop","style","ChatHeaderDetail","lgUp","max","avatarGroupClasses","avatar","ChatHeaderCompose","searchRecipients","setSearchRecipients","handleAddRecipients","Autocomplete","multiple","limitTags","popupIcon","defaultValue","disableCloseOnSelect","noOptionsText","newValue","onInputChange","options","getOptionLabel","isOptionEqualToValue","renderInput","renderOption","props","_createElement","overflow","easing","easeInOut","renderTags","getTagProps","Chip","label","useCollapseNav","setOpenMobile","setCollapseDesktop","prev","ChatView","_conversation$message","_conversation$message2","isLoading","isValidating","useSWR","fetcher","contactsLoading","contactsError","contactsValidating","contactsEmpty","useGetContacts","useSearchParams","conversationsLoading","keyBy","Object","keys","conversationsError","conversationsValidating","conversationsEmpty","useGetConversations","conversationError","conversationLoading","conversationValidating","conversationEmpty","useGetConversation","roomNav","conversationsNav","setRecipients","filteredParticipants","hasConversation","DashboardContent","metadata","appName","Page","Helmet"],"sourceRoot":""}